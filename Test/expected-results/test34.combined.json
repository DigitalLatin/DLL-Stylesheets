
  { "title" : "Namespace Test",
    "edition" : "",
    "generator" : "odd2json3",
    
    "modules" : 
    [ 
      { "ident" : "core",
        "id" : "CO",
        "desc" : 
        [  ],
        "shortDesc" : "",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ] },
      
      { "ident" : "header",
        "id" : "HD",
        "desc" : 
        [  ],
        "shortDesc" : "",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ] },
      
      { "ident" : "linking",
        "id" : "SA",
        "desc" : 
        [  ],
        "shortDesc" : "",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ] },
      
      { "ident" : "tei",
        "id" : "ST",
        "desc" : 
        [  ],
        "shortDesc" : "",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ] },
      
      { "ident" : "textstructure",
        "id" : "DS",
        "desc" : 
        [  ],
        "shortDesc" : "",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ] } ],
    "moduleRefs" : 
    [  ],
    "elements" : 
    [ 
      { "ident" : "TEI",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(TEI document) contains a single TEI-conformant document, combining\n    a single TEI header with one or more members of the model.resourceLike class. Multiple TEI\n    elements may be combined to form a teiCorpus element.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "version",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the version number of the TEI Guidelines against\n      which this document is valid.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.version" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "teiHeader" },
              
              { "type" : "classRef",
                "key" : "model.resourceLike" } ] } ] },
      
      { "ident" : "ab",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.declaring",
            "att.fragmentable",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "abbr",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(abbreviation) contains an abbreviation of any sort.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.editorial",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "allows the encoder to classify the abbreviation according to some convenient\n                typology.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "suspension",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation provides the first letter(s) of the word or phrase,\n                        omitting the remainder.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "contraction",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation omits some letter(s) in the middle.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "brevigraph",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation comprises a special symbol or mark.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "superscription",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation includes writing above the line.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "acronym",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation comprises the initial letters of the words of a phrase.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "title",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation is for a title of address (Dr, Ms, Mr, …)",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "organization",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation is for the name of an organization.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "geographic",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the abbreviation is for a geographic name.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "abstract",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "contains a summary or formal\n    abstract prefixed to an existing source document by the encoder.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "classRef",
                "key" : "model.listLike" } ] } ] },
      
      { "ident" : "add",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(addition) contains letters, words, or phrases inserted in the source\n  text by an author, scribe, or a previous annotator or corrector.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional" ],
          "atts" : 
          [ "att.global",
            "att.transcriptional",
            "att.placement",
            "att.typed",
            "att.dimensions" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "addrLine",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(address line) contains one line of a postal address.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addrPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "address",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a postal address, for example of a publisher, an organization, or an\n    individual.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addressLike",
            "model.publicationStmtPart.detail" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.addrPart" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "alt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(alternation) identifies an alternation or a set of choices among elements or passages.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "target",
            "mode" : "change",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "2",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.pointer" } } },
          
          { "onElement" : true,
            "ident" : "mode",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "states whether the alternations gathered in this collection are exclusive or\n                inclusive.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "excl",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(exclusive) indicates that the alternation is exclusive, i.e. that at most one of the\n                        alternatives occurs.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "incl",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(inclusive) indicates that the alternation is not exclusive, i.e. that one or more of\n                        the alternatives occur.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "weights",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "If mode is excl, each weight states the probability that\n                the corresponding alternative occurs. If mode is incl each\n                weight states the probability that the corresponding alternative occurs given that\n                at least one of the other alternatives occurs.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "2",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.probability" } } } ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "altGrp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(alternation group) groups a collection of alt elements and possibly pointers.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing.group" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "mode",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "states whether the alternations gathered in this collection are exclusive or\n                inclusive.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "excl",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(exclusive) indicates that the alternation is exclusive, i.e. that at most one of the\n                        alternatives occurs.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "incl",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(inclusive) indicates that the alternation is not exclusive, i.e. that one or more of\n                        the alternatives occur.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "alt" },
              
              { "type" : "elementRef",
                "key" : "ptr" } ] } ] },
      
      { "ident" : "analytic",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published\n    within a monograph or journal and not as an independent publication.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "author" },
              
              { "type" : "elementRef",
                "key" : "editor" },
              
              { "type" : "elementRef",
                "key" : "respStmt" },
              
              { "type" : "elementRef",
                "key" : "title" },
              
              { "type" : "classRef",
                "key" : "model.ptrLike" },
              
              { "type" : "elementRef",
                "key" : "date" },
              
              { "type" : "elementRef",
                "key" : "textLang" },
              
              { "type" : "elementRef",
                "key" : "idno" },
              
              { "type" : "elementRef",
                "key" : "availability" } ] } ] },
      
      { "ident" : "anchor",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "appInfo",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(application information) records information about an application which has\n  edited the TEI file.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.applicationLike" } ] },
      
      { "ident" : "application",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "provides information about an application which has acted upon the document.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.applicationLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.datable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "ident",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "supplies an identifier for the application, independent of its version number or display\n        name.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.name" } } },
          
          { "onElement" : true,
            "ident" : "version",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "supplies a version number for the application, independent of its identifier or display\n        name.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.versionNumber" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.labelLike" },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.ptrLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.pLike" } ] } ] } ] },
      
      { "ident" : "argument",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a formal list or prose description of the topics addressed by\n\ta subdivision of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper",
            "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.global" },
                  
                  { "type" : "classRef",
                    "key" : "model.headLike" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.common" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "author",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "in a bibliographic reference, contains the name(s) of an\n  author, personal or corporate, of a work; for example in the same\n  form as that provided by a recognized bibliographic name authority.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.naming" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "authority",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(release authority) supplies the name of a person or other agency responsible for\n  making a work available, other than a publisher or\n  distributor.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.publicationStmtPart.agency" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "availability",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "supplies information about the availability of a text, for example any restrictions on its\n    use or distribution, its copyright status, any licence applying to it, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.publicationStmtPart.detail",
            "model.biblPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "status",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "supplies a code identifying the current availability of the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "free",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the text is freely available.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "unknown",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the status of the text is unknown.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "restricted",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the text is not freely available.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.availabilityPart" },
              
              { "type" : "classRef",
                "key" : "model.pLike" } ] } ] },
      
      { "ident" : "back",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(back matter) contains any appendixes, etc. following the main part\n    of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.frontPart" },
                  
                  { "type" : "classRef",
                    "key" : "model.pLike.front" },
                  
                  { "type" : "classRef",
                    "key" : "model.pLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.listLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.div1Like" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.frontPart" },
                          
                          { "type" : "classRef",
                            "key" : "model.div1Like" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divLike" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.frontPart" },
                          
                          { "type" : "classRef",
                            "key" : "model.divLike" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] } ] } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divBottomPart" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottomPart" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "bibl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblLike",
            "model.biblPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable",
            "att.typed",
            "att.sortable",
            "att.docStatus" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.highlighted" },
              
              { "type" : "classRef",
                "key" : "model.pPart.data" },
              
              { "type" : "classRef",
                "key" : "model.pPart.edit" },
              
              { "type" : "classRef",
                "key" : "model.segLike" },
              
              { "type" : "classRef",
                "key" : "model.ptrLike" },
              
              { "type" : "classRef",
                "key" : "model.biblPart" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "biblFull",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file\n    description are present.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblLike" ],
          "atts" : 
          [ "att.global",
            "att.declarable",
            "att.sortable",
            "att.docStatus" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "titleStmt" },
                      
                      { "type" : "elementRef",
                        "key" : "editionStmt" },
                      
                      { "type" : "elementRef",
                        "key" : "extent" },
                      
                      { "type" : "elementRef",
                        "key" : "publicationStmt" },
                      
                      { "type" : "elementRef",
                        "key" : "seriesStmt" },
                      
                      { "type" : "elementRef",
                        "key" : "notesStmt" } ] },
                  
                  { "type" : "elementRef",
                    "key" : "sourceDesc" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "fileDesc" },
                  
                  { "type" : "elementRef",
                    "key" : "profileDesc" } ] } ] } ] },
      
      { "ident" : "biblScope",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(scope of bibliographic reference) defines the scope of a bibliographic reference, for\n    example as a list of page numbers, or a named subdivision of a larger work.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.imprintPart" ],
          "atts" : 
          [ "att.global",
            "att.citing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "biblStruct",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements\n    appear and in a specified order.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblLike" ],
          "atts" : 
          [ "att.global",
            "att.declarable",
            "att.typed",
            "att.sortable",
            "att.docStatus" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "analytic" },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "monogr" },
                  
                  { "type" : "elementRef",
                    "key" : "series" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.noteLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.ptrLike" },
                  
                  { "type" : "elementRef",
                    "key" : "relatedItem" },
                  
                  { "type" : "elementRef",
                    "key" : "citedRange" } ] } ] } ] },
      
      { "ident" : "binaryObject",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "provides encoded binary data representing an inline graphic,\n  audio, video or other object.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.graphicLike",
            "model.titlepagePart" ],
          "atts" : 
          [ "att.global",
            "att.media",
            "att.timed",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "url",
            "mode" : "delete",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            {  } },
          
          { "onElement" : true,
            "ident" : "encoding",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "The encoding used to encode the binary data. If not specified, this is assumed to be\n          Base64.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.word" } } } ],
        "content" : 
        [ 
          { "type" : "textNode" } ] },
      
      { "ident" : "body",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(text body) contains the whole body of a single unitary text, excluding any front or back matter.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.global" },
                      
                      { "type" : "classRef",
                        "key" : "model.divTop" } ] } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divGenLike" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.global" },
                      
                      { "type" : "classRef",
                        "key" : "model.divGenLike" } ] } ] },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divLike" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.global" },
                          
                          { "type" : "classRef",
                            "key" : "model.divGenLike" } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.div1Like" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.global" },
                          
                          { "type" : "classRef",
                            "key" : "model.divGenLike" } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.common" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.divLike" },
                              
                              { "type" : "alternate",
                                "minOccurs" : "0",
                                "maxOccurs" : "unbounded",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.global" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div1Like" },
                              
                              { "type" : "alternate",
                                "minOccurs" : "0",
                                "maxOccurs" : "unbounded",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.global" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] } ] } ] } ] } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divBottom" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "byline",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains the primary statement of responsibility given for a work\non its title page or at the head or end of the work.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper",
            "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "elementRef",
                "key" : "docAuthor" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "cRefPattern",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(canonical reference pattern) specifies an expression and replacement pattern for transforming a canonical reference into\n    a URI.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.patternReplacement" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "calendar",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes a calendar or dating system used in a dating formula in the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.pointing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "calendarDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(calendar description) contains a description of the calendar system used in any\n  dating expression found in the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "elementRef",
            "key" : "calendar" } ] },
      
      { "ident" : "catDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(category description) describes some category within a taxonomy or text typology, either in the form of a brief\n    prose description or in terms of the situational parameters used by the TEI formal textDesc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.limitedPhrase" },
              
              { "type" : "classRef",
                "key" : "model.catDescPart" } ] } ] },
      
      { "ident" : "catRef",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(category reference) specifies one or more defined categories within some taxonomy or text typology.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.pointing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "scheme",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "identifies the classification scheme within which the set of categories concerned is\n        defined, for example by a taxonomy element, or by\n      some other resource.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "category",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "contains an individual descriptive category, possibly nested within a superordinate\n    category, within a user-defined taxonomy.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "catDesc" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.descLike" },
                      
                      { "type" : "classRef",
                        "key" : "model.glossLike" } ] } ] },
              
              { "type" : "elementRef",
                "key" : "category" } ] } ] },
      
      { "ident" : "cb",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(column beginning) marks the beginning of a new column of a text on a\n  multi-column page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.edition",
            "att.spanning",
            "att.breaking" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "change",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "documents a change or set of changes made during the production\n    of a source document, or during the revision of an electronic file.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.ascribed",
            "att.datable",
            "att.docStatus",
            "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "target",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "points to one or more elements that belong to this change.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "choice",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "groups a number of alternative encodings for the same point in\n        a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.editorial" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "2",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.choicePart" },
              
              { "type" : "elementRef",
                "key" : "choice" } ] } ] },
      
      { "ident" : "cit",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(cited quotation) contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.quoteLike" ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.qLike" },
              
              { "type" : "classRef",
                "key" : "model.egLike" },
              
              { "type" : "classRef",
                "key" : "model.biblLike" },
              
              { "type" : "classRef",
                "key" : "model.ptrLike" },
              
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "classRef",
                "key" : "model.entryPart" } ] } ] },
      
      { "ident" : "cit",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "derived-module-foo",
        "desc" : 
        [ "<desc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\">\n            This element encodes a new citation (CASE 1)\n          <\/desc>" ],
        "shortDesc" : "\n            This element encodes a new citation (CASE 1)\n          ",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.quoteLike" ],
          "atts" : 
          [  ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "ref" },
          
          { "type" : "oneOrMore" },
          
          { "type" : "text" } ] },
      
      { "ident" : "cit",
        "ns" : "http:\/\/blah.blah\/bar",
        "type" : "elementSpec",
        "module" : "derived-module-foo",
        "desc" : 
        [ "<desc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\">\n            This element encodes a new citation (CASE 2)\n          <\/desc>" ],
        "shortDesc" : "\n            This element encodes a new citation (CASE 2)\n          ",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.quoteLike" ],
          "atts" : 
          [  ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "ref" },
          
          { "type" : "oneOrMore" },
          
          { "type" : "text" } ] },
      
      { "ident" : "citedRange",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(cited range) defines the range of cited content, often represented by pages or other units",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.citing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "classCode",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(classification code) contains the classification code used for this text in some standard classification system.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "scheme",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "identifies the\n      classification system in use, as defined by, e.g. a taxonomy element, or\n      some other resource.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "classDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(classification declarations) contains one or more taxonomies defining any classificatory\ncodes used elsewhere in the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "elementRef",
            "key" : "taxonomy" } ] },
      
      { "ident" : "closer",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "groups together salutations, datelines, and similar phrases appearing as a final group at\n    the end of a division, especially of a letter.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divBottomPart" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "elementRef",
                "key" : "signed" },
              
              { "type" : "elementRef",
                "key" : "dateline" },
              
              { "type" : "elementRef",
                "key" : "salute" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "corr",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(correction) contains the correct form of a passage apparently erroneous in the copy text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.editLike",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "correction",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(correction principles) states how and under what circumstances corrections have been made in the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "status",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the degree of correction applied to the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "high",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the text has been thoroughly checked and proofread.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "medium",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the text has been checked at least once.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "low",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the text has not been checked.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "unknown",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the correction status of the text is unknown.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "method",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the method adopted to indicate corrections within the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "silent",
                  "desc" : 
                  [  ],
                  "shortDesc" : "corrections have been made silently",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "markup",
                  "desc" : 
                  [  ],
                  "shortDesc" : "corrections have been represented using markup",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "correspAction",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(correspondence action) contains a structured\n  description of the place, the name of a person\/organization and the\n  date related to the sending\/receiving of a message or any other\n  action related to the correspondence.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.correspDescPart" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.sortable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "describes the nature of the action.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "sent",
                  "desc" : 
                  [  ],
                  "shortDesc" : "information concerning the sending or dispatch of a message.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "received",
                  "desc" : 
                  [  ],
                  "shortDesc" : "information concerning the receipt of a message.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "transmitted",
                  "desc" : 
                  [  ],
                  "shortDesc" : "information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "redirected",
                  "desc" : 
                  [  ],
                  "shortDesc" : "information concerning the\n\t  redirection of an unread message.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "forwarded",
                  "desc" : 
                  [  ],
                  "shortDesc" : "information concerning the\n\t  forwarding of a message.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.correspActionPart" },
              
              { "type" : "classRef",
                "key" : "model.pLike" } ] } ] },
      
      { "ident" : "correspContext",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(correspondence context) provides references to\n        preceding or following correspondence related to this piece of\n        correspondence.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.correspDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.correspContextPart" } ] },
      
      { "ident" : "correspDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(correspondence\n    description) contains a description\n    of the actions related to one act of correspondence.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.declarable",
            "att.canonical",
            "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.correspDescPart" },
              
              { "type" : "classRef",
                "key" : "model.pLike" } ] } ] },
      
      { "ident" : "creation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "contains information about the creation of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.global",
            "att.datable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.limitedPhrase" },
              
              { "type" : "elementRef",
                "key" : "listChange" } ] } ] },
      
      { "ident" : "date",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a date in any format.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.dateLike",
            "model.publicationStmtPart.detail" ],
          "atts" : 
          [ "att.global",
            "att.canonical",
            "att.datable",
            "att.editLike",
            "att.dimensions",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "dateline",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a brief description of the place, date, time, etc. of production of a letter,\n    newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "elementRef",
                "key" : "docDate" } ] } ] },
      
      { "ident" : "del",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as\n    superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional" ],
          "atts" : 
          [ "att.global",
            "att.transcriptional",
            "att.typed",
            "att.dimensions" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "desc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(description) contains a brief\n  description of the object documented by its parent element,\n  typically a documentation element or an entity.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.descLike",
            "model.labelLike" ],
          "atts" : 
          [ "att.global",
            "att.translatable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            {  },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "deprecationInfo",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(deprecation\n\t  information) This element\n\t  describes why or how its parent element is being deprecated,\n\t  typically including recommendations for alternate\n\t  encoding.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.limitedContent" } ] },
      
      { "ident" : "distinct",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "identifies any word or phrase which is regarded as linguistically distinct, for example as\n        archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the sublanguage or register to which the word or phrase is being\n                assigned",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } } },
          
          { "onElement" : true,
            "ident" : "time",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies how the phrase is distinct diachronically",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.text" } } },
          
          { "onElement" : true,
            "ident" : "space",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies how the phrase is distinct diatopically",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.text" } } },
          
          { "onElement" : true,
            "ident" : "social",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies how the phrase is distinct diastratically",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.text" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "distributor",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "supplies the name of a person or other agency responsible for the\ndistribution of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.imprintPart",
            "model.publicationStmtPart.agency" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "div",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(text division) contains a subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divLike" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.divLike" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.divLike" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div1",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-1 text division) contains a first-level subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div1Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div2Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div2Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div2",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-2 text division) contains a second-level subdivision of the front, body, or back of a\n text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div2Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div3Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div3Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div3",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-3 text division) contains a third-level subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div3Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div4Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div4Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div4",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-4 text division) contains a fourth-level subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div4Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div5Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div5Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div5",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-5 text division) contains a fifth-level subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div5Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div6Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div6Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div6",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-6 text division) contains a sixth-level subdivision of the front, body, or back of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div6Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "alternate",
                            "minOccurs" : "1",
                            "maxOccurs" : "1",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div7Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.divGenLike" } ] },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "sequence",
                            "minOccurs" : "1",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.common" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] },
                          
                          { "type" : "sequence",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "alternate",
                                "minOccurs" : "1",
                                "maxOccurs" : "1",
                                "content" : 
                                [ 
                                  { "type" : "classRef",
                                    "key" : "model.div7Like" },
                                  
                                  { "type" : "classRef",
                                    "key" : "model.divGenLike" } ] },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "div7",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(level-7 text division) contains the smallest possible subdivision of the front, body or back of a text, larger than\n    a paragraph.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.div7Like" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.common" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] } ] } ] },
      
      { "ident" : "divGen",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(automatically generated text division) indicates the location at which a textual division generated\n        automatically by a text-processing application is to appear.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.frontPart",
            "model.divGenLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies what type of generated text division (e.g. index,\n                table of contents, etc.) is to appear.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "index",
                  "desc" : 
                  [  ],
                  "shortDesc" : "an index is to be generated and inserted at this point.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "toc",
                  "desc" : 
                  [  ],
                  "shortDesc" : "a table of contents",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "figlist",
                  "desc" : 
                  [  ],
                  "shortDesc" : "a list of figures",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "tablist",
                  "desc" : 
                  [  ],
                  "shortDesc" : "a list of tables",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.headLike" } ] },
      
      { "ident" : "docAuthor",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(document author) contains the name of the author of the document, as given on the\ntitle page (often but not always contained in a byline).",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.divWrapper",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "docDate",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(document date) contains the date of a document, as given\non a title page or in a dateline.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.divWrapper",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "when",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "gives the value of the date in standard form, i.e. YYYY-MM-DD.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.temporal.w3c" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "docEdition",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(document edition) contains an edition statement as presented on a title page of a\ndocument.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "docImprint",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(document imprint) contains the imprint statement (place and date of publication,\npublisher name), as given\n(usually) at the foot of a title page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "elementRef",
                "key" : "pubPlace" },
              
              { "type" : "elementRef",
                "key" : "docDate" },
              
              { "type" : "elementRef",
                "key" : "publisher" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "docTitle",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(document title) contains the title of a document, including all its\nconstituents, as given on a title page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "titlePart" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "edition",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes the particularities of one edition of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "editionStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(edition statement) groups information relating to one edition of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "edition" },
                  
                  { "type" : "classRef",
                    "key" : "model.respLike" } ] } ] } ] },
      
      { "ident" : "editor",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a secondary statement of responsibility for a bibliographic item, for example the name of an\n    individual, institution or organization, (or of several such) acting as editor, compiler,\n    translator, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.naming" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "editorialDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(editorial practice declaration) provides details of editorial principles and practices applied\nduring the encoding of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "classRef",
                "key" : "model.editorialDeclPart" } ] } ] },
      
      { "ident" : "email",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(electronic mail address) contains an email address identifying a location to which\n        email messages can be delivered.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addressLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "emph",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(emphasized) marks words or phrases which are stressed or emphasized for\n        linguistic or rhetorical effect.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "encodingDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(encoding description) documents the relationship between an electronic text and the\nsource or sources from which it was derived.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.teiHeaderPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.encodingDescPart" },
              
              { "type" : "classRef",
                "key" : "model.pLike" } ] } ] },
      
      { "ident" : "epigraph",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a quotation, anonymous or attributed, appearing at\n  the start or end of a section or on a title page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper",
            "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.common" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "expan",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(expansion) contains the expansion of an abbreviation.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.editorial",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.editLike" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "extent",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "fileDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(file description) contains a full bibliographic description of an electronic file.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "titleStmt" },
                  
                  { "type" : "elementRef",
                    "key" : "editionStmt" },
                  
                  { "type" : "elementRef",
                    "key" : "extent" },
                  
                  { "type" : "elementRef",
                    "key" : "publicationStmt" },
                  
                  { "type" : "elementRef",
                    "key" : "seriesStmt" },
                  
                  { "type" : "elementRef",
                    "key" : "notesStmt" } ] },
              
              { "type" : "elementRef",
                "key" : "sourceDesc" } ] } ] },
      
      { "ident" : "floatingText",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a single text of any kind, whether unitary or composite, which interrupts the text\n    containing it at any point and after which the surrounding text resumes.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.qLike" ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "front" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "body" },
                  
                  { "type" : "elementRef",
                    "key" : "group" } ] },
              
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "back" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "foreign",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "identifies a word or phrase as belonging to some language other than that of the\n                surrounding text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "front",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(front matter) contains any prefatory matter\n    (headers, abstracts, title page, prefaces, dedications, etc.) found at the\n    start of a document, before the main body.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.frontPart" },
                  
                  { "type" : "classRef",
                    "key" : "model.pLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.pLike.front" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.div1Like" },
                          
                          { "type" : "alternate",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.div1Like" },
                              
                              { "type" : "classRef",
                                "key" : "model.frontPart" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.divLike" },
                          
                          { "type" : "alternate",
                            "minOccurs" : "0",
                            "maxOccurs" : "unbounded",
                            "content" : 
                            [ 
                              { "type" : "classRef",
                                "key" : "model.divLike" },
                              
                              { "type" : "classRef",
                                "key" : "model.frontPart" },
                              
                              { "type" : "classRef",
                                "key" : "model.global" } ] } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "0",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.divBottom" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.divBottom" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] } ] } ] } ] } ] },
      
      { "ident" : "funder",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(funding body) specifies the name of an individual, institution, or organization responsible for the\n    funding of a project or text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "gap",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "indicates a point where material has been omitted in a transcription, whether for editorial\n    reasons described in the TEI header, as part of sampling practice, or because the material is\n    illegible, invisible, or inaudible.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.edit" ],
          "atts" : 
          [ "att.global",
            "att.timed",
            "att.editLike",
            "att.dimensions" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "reason",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "gives the reason for omission",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "cancelled",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "deleted",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "editorial",
                  "desc" : 
                  [  ],
                  "shortDesc" : "for features omitted from\n\t  transcription due to editorial policy",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "illegible",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "inaudible",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "irrelevant",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "sampling",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "agent",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "in the case of text omitted because of damage, categorizes the cause of the damage, if\n        it can be identified.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "rubbing",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from rubbing of the leaf edges",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "mildew",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from mildew on the leaf surface",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "smoke",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from smoke",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.descLike" },
              
              { "type" : "classRef",
                "key" : "model.certLike" } ] } ] },
      
      { "ident" : "gb",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(gathering beginning) marks the beginning of a new gathering or quire in a transcribed codex.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.spanning",
            "att.breaking",
            "att.edition" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "geoDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "datum",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "supplies a commonly used code name for the datum employed.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "WGS84",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to\n            the World Geodetic System.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "MGRS",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(Military Grid Reference System) the values supplied are geospatial entity object codes, based on",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "OSGB36",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ED50",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according\n            to the European Datum coordinate system.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "gloss",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike",
            "model.glossLike" ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.translatable",
            "att.typed",
            "att.pointing",
            "att.cReferencing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "graphic",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.graphicLike",
            "model.titlepagePart" ],
          "atts" : 
          [ "att.global",
            "att.media",
            "att.resourced",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.descLike" } ] },
      
      { "ident" : "group",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains the body of a composite text, grouping together a sequence of distinct texts (or\n    groups of such texts) which are regarded as a unit for some purpose, for example the collected\n    works of an author, a sequence of prose essays, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "text" },
                      
                      { "type" : "elementRef",
                        "key" : "group" } ] },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "text" },
                      
                      { "type" : "elementRef",
                        "key" : "group" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] } ] },
              
              { "type" : "classRef",
                "key" : "model.divBottom" } ] } ] },
      
      { "ident" : "handNote",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(note on hand) describes a particular style or hand distinguished within a manuscript.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.handFeatures" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "head",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(heading) contains any type of heading, for example the title of a section, or the heading of a list,\n    glossary, manuscript description, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.headLike",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.placement",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "elementRef",
                "key" : "lg" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.inter" },
              
              { "type" : "classRef",
                "key" : "model.lLike" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "headItem",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(heading for list items) contains the heading for the item or gloss column in a glossary list or similar structured\n        list.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "headLabel",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(heading for list labels) contains the heading for the label or term column in a glossary list or similar structured\n        list.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "hi",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(highlighted) marks a word or phrase as graphically distinct from the\n        surrounding text, for reasons concerning which no claim is\n        made.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.hiLike" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "hyphenation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "summarizes the way in which hyphenation in a source text has been treated in an encoded\n    version of it.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "eol",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "(end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "all",
                  "desc" : 
                  [  ],
                  "shortDesc" : "all end-of-line hyphenation has been retained, even though the lineation of the\n            original may not have been.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "some",
                  "desc" : 
                  [  ],
                  "shortDesc" : "end-of-line hyphenation has been retained in some cases.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "hard",
                  "desc" : 
                  [  ],
                  "shortDesc" : "all soft end-of-line hyphenation has been removed: any remaining end-of-line\n            hyphenation should be retained.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "none",
                  "desc" : 
                  [  ],
                  "shortDesc" : "all end-of-line hyphenation has been removed: any remaining hyphenation occurred\n            within the line.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "idno",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(identifier) supplies any form of identifier used to identify some object,\n  such as a bibliographic item, a person, a title, an organization,\n  etc. in a standardized way.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.nameLike",
            "model.publicationStmtPart.detail" ],
          "atts" : 
          [ "att.global",
            "att.sortable",
            "att.datable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "categorizes the identifier, for example as an ISBN, Social\n      Security number, etc.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "ISBN",
                  "desc" : 
                  [  ],
                  "shortDesc" : "International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the  International ISBN Agency.\n        ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ISSN",
                  "desc" : 
                  [  ],
                  "shortDesc" : "International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "DOI",
                  "desc" : 
                  [  ],
                  "shortDesc" : "Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "URI",
                  "desc" : 
                  [  ],
                  "shortDesc" : "Uniform Resource Identifier: a string of characters to uniquely identify a resource which usually contains indication of the means of accessing that resource, the name of its host, and its filepath.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "VIAF",
                  "desc" : 
                  [  ],
                  "shortDesc" : "A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ESTC",
                  "desc" : 
                  [  ],
                  "shortDesc" : "English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "OCLC",
                  "desc" : 
                  [  ],
                  "shortDesc" : "OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "elementRef",
                "key" : "idno" } ] } ] },
      
      { "ident" : "imprimatur",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a formal statement authorizing the publication of a work, sometimes required to\n    appear on a title page or its verso.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "imprint",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "groups information relating to the publication or distribution\n        of a bibliographic item.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "classCode" },
                  
                  { "type" : "elementRef",
                    "key" : "catRef" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.imprintPart" },
                      
                      { "type" : "classRef",
                        "key" : "model.dateLike" } ] },
                  
                  { "type" : "elementRef",
                    "key" : "respStmt" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "index",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(index entry) marks a location to be indexed for whatever purpose.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.spanning" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "indexName",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "a single word which follows the rules defining a\n        legal XML name (see ), supplying a name to specify which index (of several) the index entry belongs to.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.name" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "term" },
              
              { "type" : "elementRef",
                "key" : "index" } ] } ] },
      
      { "ident" : "interpretation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes the scope of any analytic or interpretive information added to the text in\n    addition to the transcription.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "item",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains one component of a list.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.sortable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "join",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "result",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the name of an element which this aggregation may be understood to represent.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.name" } } },
          
          { "onElement" : true,
            "ident" : "scope",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree).",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "root",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the rooted subtrees indicated by the target attribute are joined, each subtree become a child of the virtual element created by the join",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "branches",
                  "desc" : 
                  [  ],
                  "shortDesc" : "the children of the subtrees indicated by the target attribute become the children of the virtual element (i.e. the roots of the subtrees are discarded)",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.descLike" },
              
              { "type" : "classRef",
                "key" : "model.certLike" } ] } ] },
      
      { "ident" : "joinGrp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(join group) groups a collection of join elements and possibly pointers.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing.group" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "result",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "supplies the default value for the result on each join included within the group.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.name" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.glossLike" },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "join" },
                  
                  { "type" : "elementRef",
                    "key" : "ptr" } ] } ] } ] },
      
      { "ident" : "keywords",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "contains a list of keywords or phrases identifying the topic or nature of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "scheme",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "identifies the controlled vocabulary within which the set of keywords concerned is\n        defined, for example by a taxonomy element, or by\n      some other resource.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "term" },
              
              { "type" : "elementRef",
                "key" : "list" } ] } ] },
      
      { "ident" : "l",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(verse line) contains a single, possibly incomplete, line of verse.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.lLike" ],
          "atts" : 
          [ "att.global",
            "att.fragmentable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.inter" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "label",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains any label or heading used to identify part of a text,\n  typically but not exclusively in a list or glossary.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.labelLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.placement",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "langUsage",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(language usage) describes the languages, sublanguages, registers, dialects, etc.\nrepresented within a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "elementRef",
                "key" : "language" } ] } ] },
      
      { "ident" : "language",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "characterizes a single language or sublanguage used within a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "ident",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "(identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the\n        language documented by this element, and which is referenced by the global\n        xml:lang attribute.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.language" } } },
          
          { "onElement" : true,
            "ident" : "usage",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the approximate percentage (by volume) of the text which uses this language.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "name" : "nonNegativeInteger" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "lb",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(line beginning) marks the beginning of a new (typographic) line in some edition or version of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.edition",
            "att.spanning",
            "att.breaking" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "lg",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain,\n        verse paragraph, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divPart" ],
          "atts" : 
          [ "att.global",
            "att.divLike",
            "att.typed",
            "att.declaring" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.lLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.stageLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.labelLike" },
                  
                  { "type" : "elementRef",
                    "key" : "lg" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.lLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.stageLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.labelLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" },
                  
                  { "type" : "elementRef",
                    "key" : "lg" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divBottom" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "licence",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "contains information about a licence or other legal agreement\n  applicable to the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.availabilityPart" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.datable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "link",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "linkGrp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(link group) defines a collection of associations or hypertextual links.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global",
            "att.pointing.group" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "link" },
              
              { "type" : "elementRef",
                "key" : "ptr" } ] } ] },
      
      { "ident" : "list",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains any sequence of items organized as a list.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.listLike" ],
          "atts" : 
          [ "att.global",
            "att.sortable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "describes the nature of the items in the list.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "gloss",
                  "desc" : 
                  [  ],
                  "shortDesc" : "each list item glosses some term or concept, which is given by a label element\n            preceding the list item.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "index",
                  "desc" : 
                  [  ],
                  "shortDesc" : "each list item is an entry in an index such as the alphabetical topical index \n          at the back of a print volume.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "instructions",
                  "desc" : 
                  [  ],
                  "shortDesc" : "each list item is a step in a sequence of instructions, as in a\n            recipe.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "litany",
                  "desc" : 
                  [  ],
                  "shortDesc" : "each list item is one of a sequence of petitions, supplications \n            or invocations, typically in a religious ritual.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "syllogism",
                  "desc" : 
                  [  ],
                  "shortDesc" : "each list item is part of an argument consisting of two or more propositions \n            and a final conclusion derived from them.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divTop" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "item" },
                      
                      { "type" : "classRef",
                        "key" : "model.global" } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "headLabel" },
                      
                      { "type" : "elementRef",
                        "key" : "headItem" },
                      
                      { "type" : "sequence",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "label" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" },
                          
                          { "type" : "elementRef",
                            "key" : "item" },
                          
                          { "type" : "classRef",
                            "key" : "model.global" } ] } ] } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divBottom" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "listBibl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(citation list) contains a list of bibliographic citations of any kind.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.frontPart",
            "model.biblLike" ],
          "atts" : 
          [ "att.global",
            "att.sortable",
            "att.declarable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.headLike" },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.biblLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.milestoneLike" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "relation" },
                  
                  { "type" : "elementRef",
                    "key" : "listRelation" } ] } ] } ] },
      
      { "ident" : "listChange",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "groups a number of change descriptions associated \nwith either the creation of a source text or the revision of an encoded text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.sortable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "ordered",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "indicates whether the ordering of its child change\nelements is to be considered significant or not",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.truthValue" } } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "listChange" },
              
              { "type" : "elementRef",
                "key" : "change" } ] } ] },
      
      { "ident" : "listPrefixDef",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "prefixDef" },
              
              { "type" : "elementRef",
                "key" : "listPrefixDef" } ] } ] },
      
      { "ident" : "measure",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a word or phrase referring to some quantity of an object or commodity, usually\n        comprising a number, a unit, and a commodity name.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.measureLike" ],
          "atts" : 
          [ "att.global",
            "att.measurement" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the type of measurement in any convenient typology.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "measureGrp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(measure group) contains a group of dimensional specifications which relate to the same object, for example\n    the height and width of a manuscript page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.measureLike" ],
          "atts" : 
          [ "att.global",
            "att.measurement",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.measureLike" } ] } ] },
      
      { "ident" : "media",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "indicates the location of any form of external media such as\n  an audio or video clip etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.graphicLike" ],
          "atts" : 
          [ "att.typed",
            "att.global",
            "att.media",
            "att.resourced",
            "att.declaring",
            "att.timed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "mimeType",
            "mode" : "change",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            {  } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.descLike" } ] },
      
      { "ident" : "meeting",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains the formalized descriptive title for a meeting or conference, for use in a\n    bibliographic description for an item derived from such a meeting, or as a heading or preamble\n    to publications emanating from it.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper",
            "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.limitedContent" } ] },
      
      { "ident" : "mentioned",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "marks words or phrases mentioned, not used.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "milestone",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "marks a boundary point separating any kind of section of a text, typically but not\n    necessarily indicating a point at which some part of a standard reference system changes, where\n    the change is not represented by a structural element.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.milestoneUnit",
            "att.typed",
            "att.edition",
            "att.spanning",
            "att.breaking" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "monogr",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an\n    independent item (i.e. as a separate physical object).",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "alternate",
                        "minOccurs" : "1",
                        "maxOccurs" : "1",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "author" },
                          
                          { "type" : "elementRef",
                            "key" : "editor" },
                          
                          { "type" : "elementRef",
                            "key" : "meeting" },
                          
                          { "type" : "elementRef",
                            "key" : "respStmt" } ] },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "author" },
                          
                          { "type" : "elementRef",
                            "key" : "editor" },
                          
                          { "type" : "elementRef",
                            "key" : "meeting" },
                          
                          { "type" : "elementRef",
                            "key" : "respStmt" } ] },
                      
                      { "type" : "elementRef",
                        "key" : "title" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.ptrLike" },
                          
                          { "type" : "elementRef",
                            "key" : "idno" },
                          
                          { "type" : "elementRef",
                            "key" : "textLang" },
                          
                          { "type" : "elementRef",
                            "key" : "editor" },
                          
                          { "type" : "elementRef",
                            "key" : "respStmt" } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "alternate",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "title" },
                          
                          { "type" : "classRef",
                            "key" : "model.ptrLike" },
                          
                          { "type" : "elementRef",
                            "key" : "idno" } ] },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "textLang" },
                          
                          { "type" : "elementRef",
                            "key" : "author" },
                          
                          { "type" : "elementRef",
                            "key" : "editor" },
                          
                          { "type" : "elementRef",
                            "key" : "meeting" },
                          
                          { "type" : "elementRef",
                            "key" : "respStmt" } ] } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "authority" },
                      
                      { "type" : "elementRef",
                        "key" : "idno" } ] } ] },
              
              { "type" : "elementRef",
                "key" : "availability" },
              
              { "type" : "classRef",
                "key" : "model.noteLike" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "edition" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "idno" },
                      
                      { "type" : "classRef",
                        "key" : "model.ptrLike" },
                      
                      { "type" : "elementRef",
                        "key" : "editor" },
                      
                      { "type" : "elementRef",
                        "key" : "sponsor" },
                      
                      { "type" : "elementRef",
                        "key" : "funder" },
                      
                      { "type" : "elementRef",
                        "key" : "respStmt" } ] } ] },
              
              { "type" : "elementRef",
                "key" : "imprint" },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "imprint" },
                  
                  { "type" : "elementRef",
                    "key" : "extent" },
                  
                  { "type" : "elementRef",
                    "key" : "biblScope" } ] } ] } ] },
      
      { "ident" : "name",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(name, proper noun) contains a proper noun or noun phrase.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.nameLike.agent" ],
          "atts" : 
          [ "att.global",
            "att.personal",
            "att.datable",
            "att.editLike",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "namespace",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "supplies the formal name of the namespace to which the elements documented by its children\n    belong.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "name",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the full formal name of the namespace concerned.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.namespace" } } } ],
        "content" : 
        [ 
          { "type" : "elementRef",
            "key" : "tagUsage" } ] },
      
      { "ident" : "normalization",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "indicates the extent of normalization or regularization of the original source carried out\n    in converting it to electronic form.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "method",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the method adopted to indicate normalizations within the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "silent",
                  "desc" : 
                  [  ],
                  "shortDesc" : "normalization made silently",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "markup",
                  "desc" : 
                  [  ],
                  "shortDesc" : "normalization represented using markup",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "note",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a note or annotation.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.noteLike",
            "model.correspDescPart",
            "model.correspActionPart",
            "model.correspContextPart" ],
          "atts" : 
          [ "att.global",
            "att.placement",
            "att.pointing",
            "att.typed",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "anchored",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates whether the copy text shows the exact place of reference for the note.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.truthValue" } } },
          
          { "onElement" : true,
            "ident" : "targetEnd",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "points to the end of the span to which the note is attached, if the note is not embedded\n        in the text at that point.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "notesStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(notes statement) collects together any notes providing information about a text additional to that recorded\n    in other parts of the bibliographic description.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.noteLike" },
              
              { "type" : "elementRef",
                "key" : "relatedItem" } ] } ] },
      
      { "ident" : "num",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(number) contains a number, written in any form.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.measureLike" ],
          "atts" : 
          [ "att.global",
            "att.ranging" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the type of numeric value.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "cardinal",
                  "desc" : 
                  [  ],
                  "shortDesc" : "absolute number, e.g. 21, 21.5",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ordinal",
                  "desc" : 
                  [  ],
                  "shortDesc" : "ordinal number, e.g. 21st",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "fraction",
                  "desc" : 
                  [  ],
                  "shortDesc" : "fraction, e.g. one half or three-quarters",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "percentage",
                  "desc" : 
                  [  ],
                  "shortDesc" : "a percentage",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "value",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "supplies the value of the number in standard form.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [ "<valDesc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\">a numeric value.<\/valDesc>",
              "<valDesc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\" xml:lang=\"fr\">une valeur numérique.<\/valDesc>",
              "<valDesc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\" xml:lang=\"de\">ein numerischer Wert<\/valDesc>" ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.numeric" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "opener",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "groups together dateline, byline, salutation, and similar phrases appearing as a preliminary\n    group at the start of a division, especially of a letter.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divTopPart" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "elementRef",
                "key" : "argument" },
              
              { "type" : "elementRef",
                "key" : "byline" },
              
              { "type" : "elementRef",
                "key" : "dateline" },
              
              { "type" : "elementRef",
                "key" : "epigraph" },
              
              { "type" : "elementRef",
                "key" : "salute" },
              
              { "type" : "elementRef",
                "key" : "signed" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "orig",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(original form) contains a reading which is marked as following the original, rather than being normalized\n        or corrected.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional",
            "model.choicePart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "p",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(paragraph) marks paragraphs in prose.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pLike" ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.fragmentable",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "pb",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(page beginning) marks the beginning of a new page in a paginated document.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.milestoneLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.edition",
            "att.spanning",
            "att.breaking" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "postBox",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(postal box or post office box) contains a number or other identifier for some postal delivery point other than a street\n    address.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addrPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "textNode" } ] },
      
      { "ident" : "postCode",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify\n        sorting or delivery of mail.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addrPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "textNode" } ] },
      
      { "ident" : "postscript",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a postscript, e.g. to a letter.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divBottomPart" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.global" },
                  
                  { "type" : "classRef",
                    "key" : "model.divTopPart" } ] },
              
              { "type" : "classRef",
                "key" : "model.common" },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.global" },
                  
                  { "type" : "classRef",
                    "key" : "model.common" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.divBottomPart" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "prefixDef",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(prefix definition) defines a prefixing scheme used in data.pointer values,\n  showing how abbreviated URIs using the scheme may be expanded into full URIs.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.patternReplacement" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "ident",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "supplies a name which functions as the prefix for an abbreviated\n          pointing scheme such as a private URI scheme. The prefix constitutes the \n        text preceding the first colon.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.prefix" } } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "principal",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(principal researcher) supplies the name of the principal researcher responsible for the\ncreation of an electronic text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "profileDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the\n    languages and sublanguages used, the situation in which it was produced, the participants and\n    their setting.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.teiHeaderPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.profileDescPart" } ] },
      
      { "ident" : "projectDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(project description) describes in detail the aim or purpose for which an electronic file was encoded, together\n    with any other relevant information concerning the process by which it was assembled or\n    collected.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "ptr",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(pointer) defines a pointer to another location.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.ptrLike" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.internetMedia",
            "att.typed",
            "att.declaring",
            "att.cReferencing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "pubPlace",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(publication place) contains the name of the place where a bibliographic item was published.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.imprintPart",
            "model.publicationStmtPart.detail" ],
          "atts" : 
          [ "att.global",
            "att.naming" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "publicationStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(publication statement) groups information concerning the publication or distribution of an electronic or other text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.publicationStmtPart.agency" },
                  
                  { "type" : "classRef",
                    "key" : "model.publicationStmtPart.detail" } ] },
              
              { "type" : "classRef",
                "key" : "model.pLike" } ] } ] },
      
      { "ident" : "publisher",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "provides the name of the organization responsible for the publication or distribution of a\n        bibliographic item.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.imprintPart",
            "model.publicationStmtPart.agency" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "punctuation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "specifies editorial practice adopted with respect to punctuation marks in the original.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.declarable",
            "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "marks",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates whether or not punctation marks have been retained as content within the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "none",
                  "desc" : 
                  [  ],
                  "shortDesc" : "no punctuation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "some",
                  "desc" : 
                  [  ],
                  "shortDesc" : "some punctuation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "all",
                  "desc" : 
                  [  ],
                  "shortDesc" : "all punctuation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "placement",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : " indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "internal",
                  "desc" : 
                  [  ],
                  "shortDesc" : "punctuation marks found at the start or end of a marked up text component are included within its surrounding element;",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "external",
                  "desc" : 
                  [  ],
                  "shortDesc" : "punctuation marks found at the start or end of a marked up text component appear immediately before or after the surrounding element",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "q",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(quoted) contains material which is distinguished from the\n    surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct\n    speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and\n    passages that are mentioned but not used.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.qLike" ],
          "atts" : 
          [ "att.global",
            "att.ascribed.directed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "may be used to indicate whether the offset passage is spoken or thought, or to\n        characterize it more finely.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "spoken",
                  "desc" : 
                  [  ],
                  "shortDesc" : "representation of speech",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "thought",
                  "desc" : 
                  [  ],
                  "shortDesc" : "representation of thought, e.g. internal monologue",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "written",
                  "desc" : 
                  [  ],
                  "shortDesc" : "quotation from a written source",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "soCalled",
                  "desc" : 
                  [  ],
                  "shortDesc" : "authorial distance",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "foreign",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "distinct",
                  "desc" : 
                  [  ],
                  "shortDesc" : "linguistically distinct",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "term",
                  "desc" : 
                  [  ],
                  "shortDesc" : "technical term",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "emph",
                  "desc" : 
                  [  ],
                  "shortDesc" : "rhetorically emphasized",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "mentioned",
                  "desc" : 
                  [  ],
                  "shortDesc" : "refering to itself, not its normal referent",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "q",
        "ns" : "http:\/\/blah.blah\/blah",
        "type" : "elementSpec",
        "module" : "derived-module-foo",
        "desc" : 
        [ "<desc xmlns=\"http:\/\/www.tei-c.org\/ns\/1.0\">\n            This element encodes a new quote (CASE 4)\n          <\/desc>" ],
        "shortDesc" : "\n            This element encodes a new quote (CASE 4)\n          ",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.quoteLike" ],
          "atts" : 
          [  ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "ref" },
          
          { "type" : "oneOrMore" },
          
          { "type" : "text" } ] },
      
      { "ident" : "quotation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "specifies editorial practice adopted with respect to quotation marks in the original.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "marks",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "(quotation marks) indicates whether or not quotation marks have been retained as content within the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "none",
                  "desc" : 
                  [  ],
                  "shortDesc" : "no quotation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "some",
                  "desc" : 
                  [  ],
                  "shortDesc" : "some quotation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "all",
                  "desc" : 
                  [  ],
                  "shortDesc" : "all quotation marks have been retained",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "quote",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(quotation) contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.quoteLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.notated" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "ref",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(reference) defines a reference to another location, possibly modified by additional text or comment.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.ptrLike" ],
          "atts" : 
          [ "att.global",
            "att.pointing",
            "att.internetMedia",
            "att.typed",
            "att.declaring",
            "att.cReferencing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "refState",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(reference state) specifies one component of a canonical reference defined by the milestone method.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.milestoneUnit",
            "att.edition" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "length",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the fixed length of the reference component.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.count" } } },
          
          { "onElement" : true,
            "ident" : "delim",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "(delimiter) supplies a delimiting string following the reference component.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.text" } } } ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "refsDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(references declaration) specifies how canonical references are constructed for this\n  text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "elementRef",
                "key" : "cRefPattern" },
              
              { "type" : "elementRef",
                "key" : "refState" } ] } ] },
      
      { "ident" : "reg",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(regularization) contains a reading which has been regularized or normalized in some sense.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.editLike",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "relatedItem",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains or references some other bibliographic item which is related to the present one in\n    some specified manner, for example as a constituent or alternative version of it.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "target",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "points to the related bibliographic element by means of an\n      absolute or relative URI reference",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.biblLike" },
              
              { "type" : "classRef",
                "key" : "model.ptrLike" } ] } ] },
      
      { "ident" : "rendition",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "supplies information about the rendition or appearance of one or more elements in the source\n    text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.styleDef" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "scope",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "where CSS is used, provides a way of defining\npseudo-elements, that is, styling rules\napplicable to specific sub-portions of an element.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "first-line",
                  "desc" : 
                  [  ],
                  "shortDesc" : "styling applies to the first line of\nthe target element",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "first-letter",
                  "desc" : 
                  [  ],
                  "shortDesc" : "styling applies to the first letter of\nthe target element",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "before",
                  "desc" : 
                  [  ],
                  "shortDesc" : "styling should be applied immediately before\nthe content of the target element",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "after",
                  "desc" : 
                  [  ],
                  "shortDesc" : "styling  should be applied immediately after\nthe content of\nthe target element",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "selector",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "\n        contains a selector or series of selectors specifying the elements to which the contained style \n        description applies, expressed in the language specified in the scheme attribute.\n      ",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.text" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.limitedContent" } ] },
      
      { "ident" : "resp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.canonical",
            "att.datable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "respStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "resp" },
                      
                      { "type" : "classRef",
                        "key" : "model.nameLike.agent" } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.nameLike.agent" },
                      
                      { "type" : "elementRef",
                        "key" : "resp" } ] } ] },
              
              { "type" : "elementRef",
                "key" : "note" } ] } ] },
      
      { "ident" : "revisionDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(revision description) summarizes the revision history for a file.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.docStatus" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "list" },
              
              { "type" : "elementRef",
                "key" : "listChange" },
              
              { "type" : "elementRef",
                "key" : "change" } ] } ] },
      
      { "ident" : "rs",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(referencing string) contains a general purpose name or referring string.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.nameLike" ],
          "atts" : 
          [ "att.global",
            "att.naming",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "said",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or\n    not, whether directly or indirectly reported, whether by real people or fictional characters.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.qLike" ],
          "atts" : 
          [ "att.global",
            "att.ascribed.directed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "aloud",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "may be used to indicate whether the quoted matter is regarded as having been vocalized\n        or signed.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.xTruthValue" } } },
          
          { "onElement" : true,
            "ident" : "direct",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "may be used to indicate whether the quoted matter is regarded as direct or indirect\n        speech.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.xTruthValue" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "salute",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other\n    division of a text, or the salutation in the closing of a letter, preface, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divWrapper" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "samplingDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the\n    creation of a corpus or collection.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "schemaRef",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(schema reference) describes or points to a related customization or schema file",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.resourced" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "key",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "the identifier used for the customization or schema",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.xmlName" } } } ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.descLike" } ] },
      
      { "ident" : "scriptNote",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes a particular script distinguished within\n    the description of a manuscript or similar resource.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.handFeatures" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "seg",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "(arbitrary segment) represents any segmentation of text below the chunk level.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.segLike",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.segLike",
            "att.typed",
            "att.written",
            "att.notated" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "segmentation",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "describes the principles according to which the text has been segmented, for example into\n    sentences, tone-units, graphemic strata, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "series",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(series information) contains information about the series in which a book or other bibliographic item has\n    appeared.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "elementRef",
                "key" : "title" },
              
              { "type" : "classRef",
                "key" : "model.ptrLike" },
              
              { "type" : "elementRef",
                "key" : "editor" },
              
              { "type" : "elementRef",
                "key" : "respStmt" },
              
              { "type" : "elementRef",
                "key" : "biblScope" },
              
              { "type" : "elementRef",
                "key" : "idno" },
              
              { "type" : "elementRef",
                "key" : "textLang" },
              
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "elementRef",
                "key" : "availability" } ] } ] },
      
      { "ident" : "seriesStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(series statement) groups information about the series, if any, to which a publication belongs.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "title" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "editor" },
                      
                      { "type" : "elementRef",
                        "key" : "respStmt" } ] },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "idno" },
                      
                      { "type" : "elementRef",
                        "key" : "biblScope" } ] } ] } ] } ] },
      
      { "ident" : "sic",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional",
            "model.choicePart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "signed",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(signature) contains the closing salutation, etc., appended to a foreword,\ndedicatory epistle, or other division of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divBottomPart",
            "model.divTopPart" ],
          "atts" : 
          [ "att.global",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "soCalled",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a word or phrase for which the author or narrator indicates a disclaiming of\n    responsibility, for example by the use of scare quotes or italics.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "sourceDesc",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(source description) describes the source from which an electronic text was derived or generated, typically a\n    bibliographic description in the case of a digitized text, or a phrase such as \"born digital\"\n    for a text which has no previous existence.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.pLike" },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.biblLike" },
                  
                  { "type" : "classRef",
                    "key" : "model.sourceDescPart" },
                  
                  { "type" : "classRef",
                    "key" : "model.listLike" } ] } ] } ] },
      
      { "ident" : "sp",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(speech) contains an individual speech in a performance text, or a passage presented as such in a prose or\n    verse text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divPart" ],
          "atts" : 
          [ "att.global",
            "att.ascribed.directed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "speaker" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "lg" },
                      
                      { "type" : "classRef",
                        "key" : "model.lLike" },
                      
                      { "type" : "classRef",
                        "key" : "model.pLike" },
                      
                      { "type" : "classRef",
                        "key" : "model.listLike" },
                      
                      { "type" : "classRef",
                        "key" : "model.stageLike" },
                      
                      { "type" : "classRef",
                        "key" : "model.qLike" } ] },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "speaker",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a specialized form of heading or label, giving the name of one or more speakers in a\n        dramatic text or fragment.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "sponsor",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "specifies the name of a sponsoring organization or institution.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.respLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq.limited" } ] },
      
      { "ident" : "stage",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(stage direction) contains any kind of stage direction within a dramatic text or fragment.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.stageLike" ],
          "atts" : 
          [ "att.ascribed.directed",
            "att.global",
            "att.placement" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the kind of stage direction.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "0",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "setting",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes a setting.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "entrance",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes an entrance.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "exit",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes an exit.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "business",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes stage business.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "novelistic",
                  "desc" : 
                  [  ],
                  "shortDesc" : "is a narrative, motivating stage direction.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "delivery",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes how a character speaks.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "modifier",
                  "desc" : 
                  [  ],
                  "shortDesc" : "gives some detail about a character.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "location",
                  "desc" : 
                  [  ],
                  "shortDesc" : "describes a location.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "mixed",
                  "desc" : 
                  [  ],
                  "shortDesc" : "more than one of the above",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.specialPara" } ] },
      
      { "ident" : "stdVals",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(standard values) specifies the format used when standardized date or number values are supplied.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.editorialDeclPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "street",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a full street address including any name or number identifying a\n        building as well as the name of the street or route on which it is\n        located.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.addrPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "styleDefDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(style definition language declaration) specifies the name of the formal language in which style or\n  renditional information is supplied elsewhere in the document. The\n  specific version of the scheme may also be supplied.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable",
            "att.styleDef" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "classRef",
            "key" : "model.pLike" } ] },
      
      { "ident" : "tagUsage",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "documents the usage of a specific element within a specified document.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "gi",
            "mode" : "add",
            "ns" : "",
            "usage" : "req",
            "desc" : 
            [  ],
            "shortDesc" : "(generic identifier) specifies the name\n      (generic identifier) of the element indicated by the tag,  within the namespace indicated by the parent\n        namespace element.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.name" } } },
          
          { "onElement" : true,
            "ident" : "occurs",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the number of occurrences of this element within the text.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.count" } } },
          
          { "onElement" : true,
            "ident" : "withId",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "(with unique identifier) specifies the number of occurrences of this element within the text which bear a\n        distinct value for the global xml:id attribute.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.count" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.limitedContent" } ] },
      
      { "ident" : "tagsDecl",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(tagging declaration) provides detailed information about the tagging applied to a document.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.encodingDescPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "partial",
            "mode" : "add",
            "ns" : "",
            "usage" : "rec",
            "desc" : 
            [  ],
            "shortDesc" : "indicates whether\n      the element types listed exhaustively include all those found\n      within text, or represent only a subset.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.truthValue" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "rendition" },
              
              { "type" : "elementRef",
                "key" : "namespace" } ] } ] },
      
      { "ident" : "taxonomy",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "defines a typology either implicitly, by means of a bibliographic\n    citation, or explicitly by a structured taxonomy.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "category" },
                      
                      { "type" : "elementRef",
                        "key" : "taxonomy" } ] },
                  
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "alternate",
                        "minOccurs" : "1",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "classRef",
                            "key" : "model.glossLike" },
                          
                          { "type" : "classRef",
                            "key" : "model.descLike" } ] },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "category" },
                          
                          { "type" : "elementRef",
                            "key" : "taxonomy" } ] } ] } ] },
              
              { "type" : "sequence",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.biblLike" },
                  
                  { "type" : "alternate",
                    "minOccurs" : "0",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "category" },
                      
                      { "type" : "elementRef",
                        "key" : "taxonomy" } ] } ] } ] } ] },
      
      { "ident" : "teiCorpus",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains the whole of a TEI encoded corpus, comprising a single corpus header and one or\n    more TEI elements, each containing a single text header and a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "version",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the version number of the TEI Guidelines against\n        which this document is valid.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.version" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "teiHeader" },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "sequence",
                    "minOccurs" : "1",
                    "maxOccurs" : "1",
                    "content" : 
                    [ 
                      { "type" : "classRef",
                        "key" : "model.resourceLike" },
                      
                      { "type" : "alternate",
                        "minOccurs" : "0",
                        "maxOccurs" : "unbounded",
                        "content" : 
                        [ 
                          { "type" : "elementRef",
                            "key" : "TEI" },
                          
                          { "type" : "elementRef",
                            "key" : "teiCorpus" } ] } ] },
                  
                  { "type" : "alternate",
                    "minOccurs" : "1",
                    "maxOccurs" : "unbounded",
                    "content" : 
                    [ 
                      { "type" : "elementRef",
                        "key" : "TEI" },
                      
                      { "type" : "elementRef",
                        "key" : "teiCorpus" } ] } ] } ] } ] },
      
      { "ident" : "teiHeader",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(TEI header) supplies descriptive and\n    declarative metadata associated with a digital resource or set of\n    resources.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "fileDesc" },
              
              { "type" : "classRef",
                "key" : "model.teiHeaderPart" },
              
              { "type" : "elementRef",
                "key" : "revisionDesc" } ] } ] },
      
      { "ident" : "term",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a single-word, multi-word, or symbolic\n    designation which is regarded as a technical term.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.pointing",
            "att.typed",
            "att.canonical",
            "att.sortable",
            "att.cReferencing" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "text",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a single text of any kind, whether unitary or composite, for example a poem or\n    drama, a collection of essays, a novel, a dictionary, or a corpus sample.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.resourceLike" ],
          "atts" : 
          [ "att.global",
            "att.declaring",
            "att.typed",
            "att.written" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "front" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] },
              
              { "type" : "alternate",
                "minOccurs" : "1",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "body" },
                  
                  { "type" : "elementRef",
                    "key" : "group" } ] },
              
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "sequence",
                "minOccurs" : "0",
                "maxOccurs" : "1",
                "content" : 
                [ 
                  { "type" : "elementRef",
                    "key" : "back" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "textClass",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(text classification) groups information which describes the nature or topic of a text in terms of a standard\n    classification scheme, thesaurus, etc.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.profileDescPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "classCode" },
              
              { "type" : "elementRef",
                "key" : "catRef" },
              
              { "type" : "elementRef",
                "key" : "keywords" } ] } ] },
      
      { "ident" : "textLang",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "(text language) describes the languages and writing systems identified within the bibliographic work  \n  being described, rather than its description.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.biblPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "mainLang",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "(main language) supplies a code which identifies the chief language used in the bibliographic work.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.language" } } },
          
          { "onElement" : true,
            "ident" : "otherLangs",
            "mode" : "add",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "(other languages) one or more codes identifying any other languages used in the bibliographic work.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "0",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.language" } } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "time",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a phrase defining a time of day in any format.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.dateLike" ],
          "atts" : 
          [ "att.global",
            "att.datable",
            "att.editLike",
            "att.dimensions",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "timeline",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.global.meta" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "origin",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "designates the origin of the timeline, i.e. the time at which it begins.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } },
          
          { "onElement" : true,
            "ident" : "unit",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the unit of time corresponding to the interval value of the timeline or of its constituent points in time.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "d",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(days) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "h",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(hours) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "min",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(minutes) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "s",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(seconds) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ms",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(milliseconds) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "interval",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies a time\n      interval either as a positive integral value or using one of a\n      set of predefined codes.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.interval" } } } ],
        "content" : 
        [ 
          { "type" : "elementRef",
            "key" : "when" } ] },
      
      { "ident" : "title",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a title for any kind of work.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.emphLike" ],
          "atts" : 
          [ "att.global",
            "att.canonical",
            "att.typed",
            "att.datable" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "level",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates the bibliographic level for a title, that is, whether\n                                        it identifies an article, book, journal, series, or\n                                        unpublished material.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "closed",
              "valItem" : 
              [ 
                { "ident" : "a",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(analytic) the title applies to an analytic item, such as an\n\t  article, poem, or other work published as part of a larger item.",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "m",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(monographic) the title applies to a monograph such as a book or\n          other item considered to be a distinct publication, including single\n          volumes of multi-volume works",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "j",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(journal) the title applies to any serial or periodical\n\t  publication such as a journal, magazine, or newspaper",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "s",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(series) the title applies to a series of otherwise distinct\n\t  publications such as a collection",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "u",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(unpublished) the title applies to any unpublished material (including\n                                                  theses and dissertations unless\n                                                  published by a commercial press)",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "type",
            "mode" : "change",
            "ns" : "",
            "usage" : "def",
            "desc" : 
            [  ],
            "shortDesc" : "classifies the title according to some convenient typology.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "main",
                  "desc" : 
                  [  ],
                  "shortDesc" : "main title",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "sub",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(subordinate) subtitle, title of part",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "alt",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(alternate) alternate title, often in another language,\nby which the work is also known",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "short",
                  "desc" : 
                  [  ],
                  "shortDesc" : "abbreviated form of title",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "desc",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(descriptive) descriptive paraphrase of the work\nfunctioning as a title",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "titlePage",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "(title page) contains the title page of a text, appearing within the front or back matter.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.frontPart" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "classifies the title page according to any convenient typology.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } } } ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "classRef",
                "key" : "model.global" },
              
              { "type" : "classRef",
                "key" : "model.titlepagePart" },
              
              { "type" : "alternate",
                "minOccurs" : "0",
                "maxOccurs" : "unbounded",
                "content" : 
                [ 
                  { "type" : "classRef",
                    "key" : "model.titlepagePart" },
                  
                  { "type" : "classRef",
                    "key" : "model.global" } ] } ] } ] },
      
      { "ident" : "titlePart",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a subsection or division of the title of a work, as\nindicated on a title page.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.titlepagePart",
            "model.pLike.front" ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "type",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the role of this subdivision of the title.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "main",
                  "desc" : 
                  [  ],
                  "shortDesc" : "main title of the work",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "sub",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(subordinate) subtitle  of the work",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "alt",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(alternate) alternative title  of the work",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "short",
                  "desc" : 
                  [  ],
                  "shortDesc" : "abbreviated form of title",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "desc",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(descriptive) descriptive paraphrase of the work",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "titleStmt",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(title statement) groups information about the title of a work and those responsible for its content.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "sequence",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "elementRef",
                "key" : "title" },
              
              { "type" : "classRef",
                "key" : "model.respLike" } ] } ] },
      
      { "ident" : "trailer",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "textstructure",
        "desc" : 
        [  ],
        "shortDesc" : "contains a closing title or footer appearing at the end of a division of a text.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.divBottomPart" ],
          "atts" : 
          [ "att.global",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "0",
            "maxOccurs" : "unbounded",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "elementRef",
                "key" : "lg" },
              
              { "type" : "classRef",
                "key" : "model.gLike" },
              
              { "type" : "classRef",
                "key" : "model.phrase" },
              
              { "type" : "classRef",
                "key" : "model.inter" },
              
              { "type" : "classRef",
                "key" : "model.lLike" },
              
              { "type" : "classRef",
                "key" : "model.global" } ] } ] },
      
      { "ident" : "unclear",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a word, phrase, or passage which cannot be transcribed with certainty because it\n        is illegible or inaudible in the source.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.pPart.transcriptional",
            "model.choicePart" ],
          "atts" : 
          [ "att.global",
            "att.editLike",
            "att.dimensions" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "reason",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "indicates why the material is hard to transcribe.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "unbounded",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "illegible",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "inaudible",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "faded",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "background_noise",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "eccentric_ductus",
                  "desc" : 
                  [  ],
                  "shortDesc" : "",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "agent",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "Where the difficulty in transcription arises from damage, categorizes the cause of\n                the damage, if it can be identified.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "open",
              "valItem" : 
              [ 
                { "ident" : "rubbing",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from rubbing of the leaf edges",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "mildew",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from mildew on the leaf surface",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "smoke",
                  "desc" : 
                  [  ],
                  "shortDesc" : "damage results from smoke",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } } ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.paraContent" } ] },
      
      { "ident" : "unit",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "core",
        "desc" : 
        [  ],
        "shortDesc" : "contains a symbol, a word or a phrase referring to a unit of measurement in any kind of formal or informal system.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.measureLike" ],
          "atts" : 
          [ "att.global",
            "att.typed",
            "att.measurement" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "macroRef",
            "key" : "macro.phraseSeq" } ] },
      
      { "ident" : "when",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "linking",
        "desc" : 
        [  ],
        "shortDesc" : "indicates a point in time either relative to other elements in the same timeline tag, or absolutely.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [  ],
          "atts" : 
          [ "att.global" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [ 
          { "onElement" : true,
            "ident" : "absolute",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "supplies an absolute value for the time.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.temporal.w3c" } } },
          
          { "onElement" : true,
            "ident" : "unit",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies the unit of time in which the interval value is expressed, if this is not inherited from the parent timeline.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.enumerated" } },
            "valList" : 
            { "type" : "semi",
              "valItem" : 
              [ 
                { "ident" : "d",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(days) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "h",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(hours) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "min",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(minutes) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "s",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(seconds) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] },
                
                { "ident" : "ms",
                  "desc" : 
                  [  ],
                  "shortDesc" : "(milliseconds) ",
                  "gloss" : 
                  [  ],
                  "altIdent" : 
                  [  ] } ] } },
          
          { "onElement" : true,
            "ident" : "interval",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "specifies a time\n      interval either as a number or as one of the keywords defined\n      by the datatype data.interval",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.interval" } } },
          
          { "onElement" : true,
            "ident" : "since",
            "mode" : "add",
            "ns" : "",
            "usage" : "opt",
            "desc" : 
            [  ],
            "shortDesc" : "identifies the reference point for determining the time of the current when element, which is obtained by adding the interval to the time of the reference point.",
            "gloss" : 
            [  ],
            "altIdent" : 
            [  ],
            "valDesc" : 
            [  ],
            "datatype" : 
            { "min" : "1",
              "max" : "1",
              "dataRef" : 
              { "key" : "teidata.pointer" } } } ],
        "content" : 
        [ 
          { "type" : "empty" } ] },
      
      { "ident" : "xenoData",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "elementSpec",
        "module" : "header",
        "desc" : 
        [  ],
        "shortDesc" : "(non-TEI metadata) provides a container\n  element into which metadata in non-TEI formats may be\n  placed.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "classes" : 
        { "model" : 
          [ "model.teiHeaderPart" ],
          "atts" : 
          [ "att.global",
            "att.declarable",
            "att.typed" ],
          "unknown" : 
          [  ] },
        "attributes" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "textNode" },
              
              { "type" : "anyElement",
                "require" : "",
                "except" : "" } ] } ] } ],
    "classes" : 
    { "models" : 
      [ 
        { "ident" : "model.addrPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements such as names or postal codes which may appear as part of a\n    postal address.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.addressLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to represent a postal or email address.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.pPart.data",
              "model.correspActionPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.applicationLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to record application-specific information about a document in its\n    header.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.availabilityPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements such as licences and paragraphs of text which may appear as part of an\n  availability statement",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.biblLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements containing a bibliographic description.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.biblPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which represent components of a bibliographic description.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.catDescPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups component elements of the TEI header Category Description.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.certLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which are used to indicate uncertainty or\n  precision of other elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.choicePart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements (other than choice itself) which can be used within a\n    choice alternation.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.common",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups common chunk- and inter-level elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.correspActionPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which define the\n        parts (usually names, dates and places) of one action related to the correspondence.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.correspContextPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may \n        appear as part of the correspContext element",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.correspDescPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups together metadata\n        elements for describing correspondence",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.dateLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements containing temporal expressions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.pPart.data",
              "model.correspActionPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.descLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which contain a description of their function.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div1Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups top-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div2Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups second-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div3Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups third-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div4Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups fourth-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div5Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups fifth-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div6Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups sixth-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.div7Like",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups seventh-level structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.divBottom",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements appearing at the end of a text\n    division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.divBottomPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can occur only at the end of a text\n  division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divBottom" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.divGenLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to represent a structural division which is generated rather than\n    explicitly present in the source.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.divLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to represent un-numbered generic structural divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.divPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups paragraph-level elements appearing directly within divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.common" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.divTop",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements appearing at  the beginning of a\n  text division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.divTopPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can occur only at the beginning of a text division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divTop" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.divWrapper",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can appear at either top or bottom of a\n  textual division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divTop",
              "model.divBottom" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.editorialDeclPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may be used inside editorialDecl and appear multiple times.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.egLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements containing examples or illustrations.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.emphLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements which are typographically\n  distinct and to which a specific function can be attributed.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.highlighted",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.encodingDescPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may be used inside encodingDesc and appear multiple times.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.entryPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups non-morphological elements appearing within a dictionary entry.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.frontPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which appear at the level of divisions within front or back matter.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.frontPart.drama",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which appear at the level of divisions within front or back matter of\n    performance texts only.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.frontPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.gLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to represent individual non-Unicode characters or glyphs.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.global",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may appear at any point within a TEI text.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.global.edit",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups globally available elements which perform a specifically editorial function.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.global" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.global.meta",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups globally available elements which describe the status of other elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.global" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.glossLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which provide an alternative name, explanation, or description for any\n    markup construct.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.graphicLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements containing images, formulae, and \n  similar objects.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.headLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to provide a title or heading at the start of a text\n  division.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divTopPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.hiLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements which are typographically distinct but to which no specific\n    function can be attributed.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.highlighted",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.highlighted",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements which are typographically distinct.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.imprintPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups the bibliographic elements which occur inside imprints.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.biblPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.inter",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can appear either within or between paragraph-like elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.common" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.lLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements representing metrical components such as verse lines.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.lPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements which may appear within verse only.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.labelLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to gloss or explain other parts of a document.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.limitedPhrase",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements excluding those elements primarily intended for transcription\n    of existing sources.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.listLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups list-like elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.measureLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which denote a number, a quantity, a measurement, or similar piece of text\n    that conveys some numerical meaning.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.pPart.data" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.milestoneLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups milestone-style\nelements used to represent reference systems.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.global" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.nameLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which name or refer to a person, place, or organization.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.addrPart",
              "model.pPart.data",
              "model.correspActionPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.nameLike.agent",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which contain names of individuals\nor corporate bodies.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.nameLike" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.noteLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups globally-available note-like elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.global" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.oddDecl",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which generate declarations in some markup language in ODD documents.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.offsetLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can appear only as part of a place name.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.nameLike" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups paragraph-like elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.divPart",
              "model.correspContextPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pLike.front",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups paragraph-like elements which can occur as direct constituents of front matter.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.pPart.data",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements containing names, dates, numbers, measures, and similar data.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pPart.edit",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements for simple editorial correction and transcription.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pPart.editorial",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements for simple editorial interventions that may be useful both\nin transcribing and in authoring.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.pPart.edit",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pPart.msdesc",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements used in manuscript description.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.pPart.transcriptional",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements used for editorial transcription of pre-existing source\n    materials.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.pPart.edit" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.phrase",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can occur at the level of individual words or phrases.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.phrase.xml",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups phrase-level elements used to encode XML constructs such as element names, attribute\n    names, and attribute values",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase",
              "model.limitedPhrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.placeNamePart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which form part of a place name.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.placeStateLike" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.placeStateLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which describe changing states of a place.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.nameLike" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.profileDescPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may be used inside profileDesc\nand appear multiple times.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.ptrLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used for purposes of location and reference.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase",
              "model.limitedPhrase",
              "model.correspContextPart",
              "model.publicationStmtPart.detail" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.publicationStmtPart.agency",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups the child\n  elements of a publicationStmt element of the TEI header\n  that indicate an authorising agent.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.publicationStmtPart.detail",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups the agency-specific child elements of the publicationStmt element of the TEI header.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.qLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements related to highlighting which can appear either within or between\n    chunk-level elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.quoteLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used to directly contain quotations.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.qLike" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.resourceLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups separate elements\n    which constitute the content of a digital resource, as opposed to its\n    metadata.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.respLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which are used to indicate intellectual or other significant responsibility,\n    for example within a bibliographic element.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.biblPart" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.segLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements used for arbitrary segmentation.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.sourceDescPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which may be used inside sourceDesc and appear multiple times.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.specDescLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements for referring to specification elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.phrase" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.stageLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements containing stage directions or similar things defined by the module for\n    performance texts.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [ "model.inter" ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] } },
        
        { "ident" : "model.teiHeaderPart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups high level elements which may appear more than once in a TEI header.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] },
        
        { "ident" : "model.titlepagePart",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "groups elements which can occur as direct constituents of a title page, such as\n    docTitle, docAuthor, docImprint, or epigraph.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ] } ],
      "attributes" : 
      [ 
        { "ident" : "att.ascribed",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements representing speech or action that can be ascribed to a\n    specific individual.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "who",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the person, or group of people, to whom the element content is ascribed.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.ascribed.directed",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements representing speech or action that can be directed at a\n        group or individual.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.ascribed" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "toWhom",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the person, or group of people, to whom a speech act or action is directed.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.breaking",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute to indicate whether or not the element\n  concerned is considered to  mark the end of an orthographic token in the same way\n  as whitespace.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "break",
              "mode" : "add",
              "ns" : "",
              "usage" : "rec",
              "desc" : 
              [  ],
              "shortDesc" : "indicates whether or not the  element\n\tbearing this attribute should be considered to mark the end of\n\tan orthographic token in the same way as whitespace.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "",
                "valItem" : 
                [ 
                  { "ident" : "yes",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element bearing this attribute is considered\nto mark the end of any adjacent orthographic token irrespective of the presence\nof any adjacent whitespace",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "no",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element bearing this attribute is considered\nnot to mark the end of any adjacent orthographic token irrespective of the presence\nof any adjacent whitespace",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "maybe",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the encoding does not take any position on this issue.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.cReferencing",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute which may be used to supply a\n  canonical reference as a means of identifying the\n  target of a pointer.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "cRef",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "(canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the\n        scheme defined in a refsDecl element in the TEI header",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.text" } } } ] },
        
        { "ident" : "att.canonical",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes which can be used to associate a representation such as a name or title\n    with canonical information about the object being named or referenced.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "key",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "provides an externally-defined means of identifying the entity (or entities) being\n        named, using a coded value of some kind.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.text" } } },
            
            { "onElement" : false,
              "ident" : "ref",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(reference) provides an explicit means of locating a full definition or identity for the entity being named by\n        means of one or more URIs.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.citing",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for specifying the specific part of a bibliographic item being cited.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "unit",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "volume",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element contains a volume number.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "issue",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element contains an issue number, or volume and\n\t  issue numbers.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "page",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element contains a page number or page range.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "line",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element contains a line number or line range.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "chapter",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element contains a chapter indication (number\n\t  and\/or title)",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "part",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element identifies a part of a book or collection.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "column",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element identifies a column.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "entry",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the element identifies an entry number or label in a list of entries.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "from",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the starting point of the range of units indicated by the unit attribute.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.word" } } },
            
            { "onElement" : false,
              "ident" : "to",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the end-point of the range of units indicated by the unit attribute.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.word" } } } ] },
        
        { "ident" : "att.datable",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for normalization of elements that contain\n  dates, times, or datable events.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.datable.w3c" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "calendar",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the system or calendar to which the date represented by the content of this\n        element belongs.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "period",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "supplies a pointer to some location defining a named\n        period of time within which the datable item is understood to\n        have occurred.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.datable.w3c",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "when",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "supplies the value of the date or time in a standard form,\n        e.g. yyyy-mm-dd.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } },
            
            { "onElement" : false,
              "ident" : "notBefore",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the earliest possible date for the event in\n        standard form, e.g. yyyy-mm-dd.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } },
            
            { "onElement" : false,
              "ident" : "notAfter",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the latest possible date for the event in\n        standard form, e.g. yyyy-mm-dd.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } },
            
            { "onElement" : false,
              "ident" : "from",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } },
            
            { "onElement" : false,
              "ident" : "to",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the ending point of the period in standard\n        form, e.g. yyyy-mm-dd.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } } ] },
        
        { "ident" : "att.datcat",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides the dcr:datacat and\n  dcr:ValueDatacat attributes which are used to \n    align XML elements or attributes with the appropriate Data Categories (DCs) defined by the ISO 12620:2009 \n    standard and stored in the Web repository called ISOCat at http:\/\/www.isocat.org\/.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "datcat",
              "mode" : "add",
              "ns" : "http:\/\/www.isocat.org\/ns\/dcr",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "contains a PID (persistent identifier) that aligns the given element with the appropriate \n        Data Category (or categories) in ISOcat.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "valueDatcat",
              "mode" : "add",
              "ns" : "http:\/\/www.isocat.org\/ns\/dcr",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "contains a PID (persistent identifier) that aligns the content of the given\n        element or the value of the given attribute with the appropriate simple Data\n        Category (or categories) in ISOcat.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.declarable",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for those elements in the TEI header which\n  may be independently selected by means of  the special purpose decls attribute.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "default",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates whether or not this element is selected by default when\nits parent is selected.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.truthValue" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "true",
                    "desc" : 
                    [  ],
                    "shortDesc" : "This element is selected if its parent is selected",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "false",
                    "desc" : 
                    [  ],
                    "shortDesc" : "This element can only be selected explicitly, unless it is the\nonly one of its kind, in which case it is selected if its parent is selected.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.declaring",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements which may be independently associated with a particular declarable element within the header, thus overriding the inherited default for that element.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "decls",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "identifies one or more declarable elements within the\nheader, which are understood to apply to the element bearing this\nattribute and its content.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.dimensions",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for describing the size of physical objects.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.ranging" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "unit",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "names the unit used for the measurement",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "cm",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(centimetres) ",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "mm",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(millimetres) ",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "in",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(inches) ",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "lines",
                    "desc" : 
                    [  ],
                    "shortDesc" : "lines of text",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "chars",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(characters) characters of text",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "quantity",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the length in the units specified",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "extent",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the size of the object concerned using a project-specific vocabulary combining\n        quantity and units in a single string of words.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.text" } } },
            
            { "onElement" : false,
              "ident" : "precision",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "characterizes the precision of the values specified by the other attributes.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.certainty" } } },
            
            { "onElement" : false,
              "ident" : "scope",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "where the measurement summarizes more than one observation, specifies the applicability\n        of this measurement.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "open",
                "valItem" : 
                [ 
                  { "ident" : "all",
                    "desc" : 
                    [  ],
                    "shortDesc" : "measurement applies to all instances.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "most",
                    "desc" : 
                    [  ],
                    "shortDesc" : "measurement applies to most of the instances inspected.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "range",
                    "desc" : 
                    [  ],
                    "shortDesc" : "measurement applies to only the specified range of instances.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.divLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes common to all elements which behave in the same way as divisions.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.fragmentable" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "org",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(organization) specifies how the content of the division is organized.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "composite",
                    "desc" : 
                    [  ],
                    "shortDesc" : "no claim is made about the\n\t\t  sequence in which the immediate contents of this division\n\t\t  are to be processed, or their inter-relationships.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "uniform",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the immediate contents of this\n\t\t  element are regarded as forming a logical unit, to be\n\t\t  processed in sequence.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "sample",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates whether this division is a sample of the\n\t\toriginal source and if so, from which part.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "initial",
                    "desc" : 
                    [  ],
                    "shortDesc" : "division lacks material present at end in source.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "medial",
                    "desc" : 
                    [  ],
                    "shortDesc" : "division lacks material at start and end.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "final",
                    "desc" : 
                    [  ],
                    "shortDesc" : "division lacks material at start.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "unknown",
                    "desc" : 
                    [  ],
                    "shortDesc" : "position of sampled material within original unknown.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "complete",
                    "desc" : 
                    [  ],
                    "shortDesc" : "division is not a sample.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.docStatus",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for use on metadata elements\n  describing the status of a document.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "status",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "describes the status of a document either currently or, when\nassociated with a dated element, at the time indicated.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "open",
                "valItem" : 
                [ 
                  { "ident" : "approved",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "candidate",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "cleared",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "deprecated",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "draft",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "embargoed",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "expired",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "frozen",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "galley",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "proposed",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "published",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "recommendation",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "submitted",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "unfinished",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "withdrawn",
                    "desc" : 
                    [  ],
                    "shortDesc" : "",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.editLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes describing the nature of an encoded scholarly intervention or\n    interpretation of any kind.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "evidence",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the nature of the evidence supporting the reliability or accuracy of the\n        intervention or interpretation.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "internal",
                    "desc" : 
                    [  ],
                    "shortDesc" : "there is internal evidence to support the intervention.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "external",
                    "desc" : 
                    [  ],
                    "shortDesc" : "there is external evidence to support the intervention.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "conjecture",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the intervention or interpretation has been made by the editor, cataloguer, or\n            scholar on the basis of their expertise.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "instant",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "indicates whether this is an instant revision or not.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.xTruthValue" } } } ] },
        
        { "ident" : "att.edition",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes identifying the source edition from which\n  some encoded feature derives.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "ed",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(edition) supplies a sigil or other arbitrary identifier for the source edition in which\n      the associated feature (for example, a  page, column, or line\n      break) occurs at this point in the text.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.word" } } },
            
            { "onElement" : false,
              "ident" : "edRef",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(edition reference) provides a pointer to the source edition in which\n      the associated feature (for example, a  page, column, or line\n      break) occurs at this point in the text.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.fragmentable",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute for representing\n    fragmentation of a structural element, typically as \n  a consequence of some overlapping hierarchy.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "part",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies whether or not its parent element is fragmented\n      in some way, typically by some other overlapping structure: for\n      example a speech which is divided between two or more verse\n      stanzas, a paragraph which is split across a page division, a\n      verse line which is divided between two speakers.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "Y",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(yes) the element is fragmented in some (unspecified) respect",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "N",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(no) the element is not fragmented, or no claim is made as to its completeness",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "I",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(initial) this is the initial part of a fragmented element",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "M",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(medial) this is a medial part of a fragmented element",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "F",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(final) this is the final part of a fragmented element",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.global",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes common to all elements in the TEI encoding scheme.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.global.rendition",
              "att.global.linking",
              "att.global.responsibility",
              "att.global.source" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "xml:id",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(identifier) provides a unique identifier for the element bearing the attribute.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "name" : "ID" } } },
            
            { "onElement" : false,
              "ident" : "n",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(number) gives a number (or other label) for an element, which is not necessarily unique within\n        the document.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.text" } } },
            
            { "onElement" : false,
              "ident" : "xml:lang",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(language) indicates the language of the element content using a tag generated\n        according to BCP 47.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.language" } } },
            
            { "onElement" : false,
              "ident" : "xml:base",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "provides a base URI reference with which applications can resolve relative URI\n        references into absolute URI references.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "xml:space",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "signals an intention about how white space should be \n      managed by  applications.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "default",
                    "desc" : 
                    [  ],
                    "shortDesc" : "signals that the application's default white-space processing modes are acceptable",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "preserve",
                    "desc" : 
                    [  ],
                    "shortDesc" : "indicates the intent that applications preserve all white space",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.global.linking",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "linking",
          "desc" : 
          [  ],
          "shortDesc" : "provides a set of attributes for hypertextual linking.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "corresp",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(corresponds) points to elements that correspond to the current\n      element in some way.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "synch",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(synchronous) points to elements that are synchronous with the current\n      element.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "sameAs",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to an element that is the same as the current\n      element.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "copyOf",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to an element of which the current element is a\n\tcopy.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "next",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to the next element of a virtual aggregate of which\n      the current element is part.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "prev",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(previous) points to the previous element of a virtual aggregate of\n      which the current element is part.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "exclude",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to elements that are in exclusive alternation\n      with the current element.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "select",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "selects one or more alternants; if one alternant is\n      selected, the ambiguity or uncertainty is marked as resolved. If\n      more than one alternant is selected, the degree of ambiguity or\n      uncertainty is marked as reduced by the number of alternants not\n      selected.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.global.rendition",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides rendering attributes common to all elements in the TEI encoding scheme.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "rend",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(rendition) indicates how the element in question was rendered or presented in the source text.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.word" } } },
            
            { "onElement" : false,
              "ident" : "style",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "contains an expression in some formal style definition language\nwhich defines the rendering or presentation\nused for this element in the source text",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.text" } } },
            
            { "onElement" : false,
              "ident" : "rendition",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to a description of the rendering or presentation used for this element in the\n        source text.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.global.responsibility",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "cert",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(certainty) signifies the degree of certainty associated with the intervention or interpretation.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.probCert" } } },
            
            { "onElement" : false,
              "ident" : "resp",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(responsible party) indicates the agency responsible for the intervention or interpretation, for example an\n        editor or transcriber.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.global.source",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute used by elements to point to an\n    external source.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "source",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the source from which some aspect of\n        this element is drawn.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.handFeatures",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes describing aspects of the hand in which a\n  manuscript is written.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "scribe",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "gives a name or other identifier for the scribe\nbelieved to be responsible for this hand.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.name" } } },
            
            { "onElement" : false,
              "ident" : "scribeRef",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "points to a full description of the scribe concerned, typically supplied by a person element\n      elsewhere in the description.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "script",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "characterizes the particular script or writing style used by\nthis hand, for example secretary, copperplate, Chancery, Italian, etc.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.name" } } },
            
            { "onElement" : false,
              "ident" : "scriptRef",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "points to a full description of the script or writing style used by\nthis hand, typically supplied by a scriptNote element\n      elsewhere in the description.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "medium",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "describes the tint or type of ink, e.g. brown, or other\nwriting medium, e.g. pencil\n         ",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } },
            
            { "onElement" : false,
              "ident" : "scope",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "specifies how widely this  hand is used in the manuscript.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "sole",
                    "desc" : 
                    [  ],
                    "shortDesc" : "only this hand is used throughout the manuscript",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "major",
                    "desc" : 
                    [  ],
                    "shortDesc" : "this hand is used through most of the manuscript",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "minor",
                    "desc" : 
                    [  ],
                    "shortDesc" : "this hand is used occasionally in the manuscript",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.internetMedia",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for specifying the type of a computer\n  resource using a standard taxonomy.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "mimeType",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.word" } } } ] },
        
        { "ident" : "att.measurement",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes to represent a regularized or normalized measurement.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "unit",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the units used for the measurement, usually\n      using the standard symbol for the desired units.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "m",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(metre) SI base unit of length",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "kg",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(kilogram) SI base unit of mass",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "s",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(second) SI base unit of time",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "Hz",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(hertz) SI unit of frequency",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "Pa",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(pascal) SI unit of pressure or stress",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "Ω",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(ohm) SI unit of electric resistance",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "L",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(litre) 1 dm³",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "t",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(tonne) 10³ kg",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "ha",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(hectare) 1 hm²",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "Å",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(ångström) 10⁻¹⁰ m",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "mL",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(millilitre) ",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "cm",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(centimetre) ",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "dB",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(decibel) see remarks, below",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "kbit",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(kilobit) 10³ or 1000 bits",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "Kibit",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(kibibit) 2¹⁰ or 1024 bits",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "kB",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(kilobyte) 10³ or 1000 bytes",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "KiB",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(kibibyte) 2¹⁰ or 1024 bytes",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "MB",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(megabyte) 10⁶ or 1 000 000 bytes",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "MiB",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(mebibyte) 2²⁰ or 1 048 576 bytes",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "quantity",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the number of the specified units that\n      comprise the measurement",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "commodity",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the substance that is being measured",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.word" } } } ] },
        
        { "ident" : "att.media",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for specifying display and related properties of\n  external media.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.internetMedia" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "width",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "Where the media are displayed, indicates the  display width",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.outputMeasurement" } } },
            
            { "onElement" : false,
              "ident" : "height",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "Where the media are displayed, indicates the display height",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.outputMeasurement" } } },
            
            { "onElement" : false,
              "ident" : "scale",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "Where the media are displayed, indicates a scale factor to\n      be applied when generating the desired display size",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } } ] },
        
        { "ident" : "att.milestoneUnit",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "core",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute to indicate the type of section which is changing at a specific milestone.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "unit",
              "mode" : "add",
              "ns" : "",
              "usage" : "req",
              "desc" : 
              [  ],
              "shortDesc" : "provides a conventional name for the kind of section changing at this milestone.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "page",
                    "desc" : 
                    [  ],
                    "shortDesc" : "physical page breaks (synonymous with the pb element).",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "column",
                    "desc" : 
                    [  ],
                    "shortDesc" : "column breaks.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "line",
                    "desc" : 
                    [  ],
                    "shortDesc" : "line breaks (synonymous with the lb element).",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "book",
                    "desc" : 
                    [  ],
                    "shortDesc" : "any units termed book, liber, etc.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "poem",
                    "desc" : 
                    [  ],
                    "shortDesc" : "individual poems in a collection.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "canto",
                    "desc" : 
                    [  ],
                    "shortDesc" : "cantos or other major sections of a poem.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "speaker",
                    "desc" : 
                    [  ],
                    "shortDesc" : "changes of speaker or narrator.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "stanza",
                    "desc" : 
                    [  ],
                    "shortDesc" : "stanzas within a poem, book, or canto.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "act",
                    "desc" : 
                    [  ],
                    "shortDesc" : "acts within a play.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "scene",
                    "desc" : 
                    [  ],
                    "shortDesc" : "scenes within a play or act.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "section",
                    "desc" : 
                    [  ],
                    "shortDesc" : "sections of any kind.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "absent",
                    "desc" : 
                    [  ],
                    "shortDesc" : "passages not present in the reference edition.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "unnumbered",
                    "desc" : 
                    [  ],
                    "shortDesc" : "passages present in the text, but not to be included as part of the reference.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.naming",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes common to elements which refer to named persons, places, organizations etc.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.canonical" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "role",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "may be used to specify further information about the entity referenced by\nthis name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } },
            
            { "onElement" : false,
              "ident" : "nymRef",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(reference to the canonical name) provides a means of locating the canonical form\n      (nym) of the names associated with the object\n       named by\n      the element bearing it.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.notated",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute to indicate any specialised notation used for element content.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "notation",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "names the notation used for the content of the element.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } } ] },
        
        { "ident" : "att.patternReplacement",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "header",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for regular-expression matching and replacement.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "matchPattern",
              "mode" : "add",
              "ns" : "",
              "usage" : "req",
              "desc" : 
              [  ],
              "shortDesc" : "specifies a regular expression against which the values of other attributes\n        can be matched.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pattern" } } },
            
            { "onElement" : false,
              "ident" : "replacementPattern",
              "mode" : "add",
              "ns" : "",
              "usage" : "req",
              "desc" : 
              [  ],
              "shortDesc" : "specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in\n        the matchPattern which, once subpattern substitution\n        has been performed, complete the URI.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.replacement" } } } ] },
        
        { "ident" : "att.personal",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "(attributes for components of names usually, but not necessarily, personal names) common attributes for those elements which form part of a name usually, but not necessarily, a personal name.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.naming" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "full",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates whether the name component is given in full, as an\nabbreviation or simply as an initial.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "yes",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the name component is spelled out in full.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "abb",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(abbreviated) the name component is given in an abbreviated form.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "init",
                    "desc" : 
                    [  ],
                    "shortDesc" : "(initial letter) the name component is indicated only by\none initial.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "sort",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the sort order of the name component in relation to others within the name.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.count" } } } ] },
        
        { "ident" : "att.placement",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for describing where on the source page or\n  object a textual element appears.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "place",
              "mode" : "add",
              "ns" : "",
              "usage" : "rec",
              "desc" : 
              [  ],
              "shortDesc" : "specifies where this item is placed.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "semi",
                "valItem" : 
                [ 
                  { "ident" : "below",
                    "desc" : 
                    [  ],
                    "shortDesc" : "below the line",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "bottom",
                    "desc" : 
                    [  ],
                    "shortDesc" : "at the foot of the page",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "margin",
                    "desc" : 
                    [  ],
                    "shortDesc" : "in the margin (left, right, or both)",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "top",
                    "desc" : 
                    [  ],
                    "shortDesc" : "at the top of the page",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "opposite",
                    "desc" : 
                    [  ],
                    "shortDesc" : "on the opposite, i.e. facing, page",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "overleaf",
                    "desc" : 
                    [  ],
                    "shortDesc" : "on the other side of the leaf",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "above",
                    "desc" : 
                    [  ],
                    "shortDesc" : "above the line",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "end",
                    "desc" : 
                    [  ],
                    "shortDesc" : "at the end of e.g. chapter or volume.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "inline",
                    "desc" : 
                    [  ],
                    "shortDesc" : "within the body of the text.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "inspace",
                    "desc" : 
                    [  ],
                    "shortDesc" : " in a predefined space, for example left by an earlier scribe.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.pointing",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "targetLang",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the language of the content to be found at the destination referenced by target, using a language tag generated\n        according to BCP 47.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.language" } } },
            
            { "onElement" : false,
              "ident" : "target",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the destination of the reference by supplying one or more URI References",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "evaluate",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the intended meaning when the target of a\n      pointer is itself a pointer.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "all",
                    "desc" : 
                    [  ],
                    "shortDesc" : "if the element pointed to is itself a pointer, then\n\t  the target of that pointer will be taken, and so on, until\n\t  an element is found which is not a pointer.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "one",
                    "desc" : 
                    [  ],
                    "shortDesc" : "if the element pointed to is itself a pointer, then\n\t  its target (whether a pointer or not) is taken as the target\n\t  of this pointer.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "none",
                    "desc" : 
                    [  ],
                    "shortDesc" : "no further evaluation of targets is carried out\n\t  beyond that needed to find the element specified in the\n\t  pointer's target.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } } ] },
        
        { "ident" : "att.pointing.group",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides a set of attributes common to all elements which\n  enclose groups of pointer elements.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.pointing",
              "att.typed" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "domains",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "optionally specifies the identifiers of the elements\n      within which all elements indicated by the contents of this\n      element lie.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "2",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "targFunc",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "(target function) describes the function of each of the values of the\n      target attribute of the enclosed link,\n      join, or alt tags.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "2",
                "max" : "unbounded",
                "dataRef" : 
                { "key" : "teidata.word" } } } ] },
        
        { "ident" : "att.ranging",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for describing numerical ranges.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "atLeast",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "gives a minimum estimated value for the approximate measurement.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "atMost",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "gives a maximum estimated value for the approximate measurement.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "min",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "where the measurement summarizes more than one observation\n      or a range, supplies the minimum value\n        observed.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "max",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "where the measurement summarizes more than one observation\n        or a range, supplies the maximum value\n        observed.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.numeric" } } },
            
            { "onElement" : false,
              "ident" : "confidence",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the degree of statistical confidence (between zero and one) that a value falls within the range\n        specified by min and max, or the proportion of observed values that fall within that range.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.probability" } } } ] },
        
        { "ident" : "att.resourced",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes by which a resource (such as an externally\n  held media file) may be located.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "url",
              "mode" : "add",
              "ns" : "",
              "usage" : "req",
              "desc" : 
              [  ],
              "shortDesc" : "(uniform resource locator) specifies the URL from which the media concerned may be obtained.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.segLike",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements used for arbitrary segmentation.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.datcat",
              "att.fragmentable" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "function",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "characterizes the function of the segment.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } } ] },
        
        { "ident" : "att.sortable",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements in lists or groups that are sortable, but whose sorting key cannot be derived mechanically from the element content.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "sortKey",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "supplies the sort key for this element in an index, list or group which contains it.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.word" } } } ] },
        
        { "ident" : "att.spanning",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes for elements which delimit a span of text by pointing mechanisms rather than by enclosing it.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "spanTo",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the end of a span initiated by the element\n\tbearing this attribute.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.styleDef",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes to specify the name of a formal definition\n  language used to provide formatting or rendition information.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "scheme",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "identifies the language used to describe the rendition.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "closed",
                "valItem" : 
                [ 
                  { "ident" : "css",
                    "desc" : 
                    [  ],
                    "shortDesc" : "Cascading Stylesheet Language",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "xslfo",
                    "desc" : 
                    [  ],
                    "shortDesc" : "Extensible Stylesheet Language Formatting Objects",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "free",
                    "desc" : 
                    [  ],
                    "shortDesc" : "Informal free text description",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "other",
                    "desc" : 
                    [  ],
                    "shortDesc" : "A user-defined rendition description language",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "schemeVersion",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "supplies a version number for the style language provided in scheme.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.versionNumber" } } } ] },
        
        { "ident" : "att.timed",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes common to those elements which\n  have a duration in time, expressed either absolutely or by reference\n  to an alignment map.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "start",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the location within a temporal alignment at\n      which this element begins.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } },
            
            { "onElement" : false,
              "ident" : "end",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the location within a temporal alignment at\n      which this element ends.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] },
        
        { "ident" : "att.transcriptional",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes specific to elements encoding authorial or\n  scribal intervention in a text when\n  transcribing manuscript or similar sources.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [ "att.editLike",
              "att.written" ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "status",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "indicates the effect of the intervention, for example in\n      the case of a deletion, strikeouts\n      which include too much or too little text, or in the case of an\n      addition, an insertion which duplicates some of the text\n      already present.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } },
              "valList" : 
              { "type" : "open",
                "valItem" : 
                [ 
                  { "ident" : "duplicate",
                    "desc" : 
                    [  ],
                    "shortDesc" : "all of the text indicated as an addition duplicates\n\t  some text that is in the original, whether the duplication\n\t  is word-for-word or less exact.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "duplicate-partial",
                    "desc" : 
                    [  ],
                    "shortDesc" : "part of the text indicated as an addition duplicates\n\t  some text that is in the original",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "excessStart",
                    "desc" : 
                    [  ],
                    "shortDesc" : "some text at the beginning of the deletion is marked\n          as deleted even though it clearly should not be\n          deleted.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "excessEnd",
                    "desc" : 
                    [  ],
                    "shortDesc" : "some text at the end of the deletion is marked as\n          deleted even though it clearly should not be\n          deleted.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "shortStart",
                    "desc" : 
                    [  ],
                    "shortDesc" : "some text at the beginning of the deletion is not\n          marked as deleted even though it clearly should be.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "shortEnd",
                    "desc" : 
                    [  ],
                    "shortDesc" : "some text at the end of the deletion is not marked as\n          deleted even though it clearly should be.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "partial",
                    "desc" : 
                    [  ],
                    "shortDesc" : "some text in the deletion is not marked as deleted\n\t  even though it clearly should be.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] },
                  
                  { "ident" : "unremarkable",
                    "desc" : 
                    [  ],
                    "shortDesc" : "the deletion is not faulty.",
                    "gloss" : 
                    [  ],
                    "altIdent" : 
                    [  ] } ] } },
            
            { "onElement" : false,
              "ident" : "cause",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "documents the presumed cause for the intervention.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } },
            
            { "onElement" : false,
              "ident" : "seq",
              "mode" : "add",
              "ns" : "",
              "usage" : "def",
              "desc" : 
              [  ],
              "shortDesc" : "(sequence) assigns a sequence number related to the order in which\n      the encoded features carrying this attribute are believed to have occurred.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.count" } } } ] },
        
        { "ident" : "att.translatable",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes used to  indicate the status of a translatable\nportion of an ODD document.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "versionDate",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "specifies the date on which the source text was extracted and sent to the translator",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.temporal.w3c" } } } ] },
        
        { "ident" : "att.typed",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides attributes which can be used to classify or subclassify elements in any way.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "type",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "characterizes the element in some sense, using any convenient\n classification scheme or typology.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } },
            
            { "onElement" : false,
              "ident" : "subtype",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "provides a sub-categorization of the element, if needed",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.enumerated" } } } ] },
        
        { "ident" : "att.written",
          "ns" : "http:\/\/foo.foo\/foo",
          "type" : "classSpec",
          "module" : "tei",
          "desc" : 
          [  ],
          "shortDesc" : "provides an attribute to indicate the hand in which\n    the content of an element was written in the source being transcribed.",
          "gloss" : 
          [  ],
          "altIdent" : 
          [  ],
          "classes" : 
          { "model" : 
            [  ],
            "atts" : 
            [  ],
            "unknown" : 
            [  ] },
          "attributes" : 
          [ 
            { "onElement" : false,
              "ident" : "hand",
              "mode" : "add",
              "ns" : "",
              "usage" : "opt",
              "desc" : 
              [  ],
              "shortDesc" : "points to a handNote element describing the hand considered responsible for the\n  \t    content of the element concerned.",
              "gloss" : 
              [  ],
              "altIdent" : 
              [  ],
              "valDesc" : 
              [  ],
              "datatype" : 
              { "min" : "1",
                "max" : "1",
                "dataRef" : 
                { "key" : "teidata.pointer" } } } ] } ] },
    "elementRefs" : 
    [  ],
    "classRefs" : 
    [  ],
    "macros" : 
    [ 
      { "ident" : "macro.limitedContent",
        "module" : "tei",
        "type" : "",
        "desc" : 
        [  ],
        "shortDesc" : "(paragraph content) defines the content of prose elements that are not used for transcription of extant materials.",
        "gloss" : 
        [  ] },
      
      { "ident" : "macro.paraContent",
        "module" : "tei",
        "type" : "",
        "desc" : 
        [  ],
        "shortDesc" : "(paragraph content) defines the content of paragraphs and similar elements.",
        "gloss" : 
        [  ] },
      
      { "ident" : "macro.phraseSeq",
        "module" : "tei",
        "type" : "",
        "desc" : 
        [  ],
        "shortDesc" : "(phrase sequence) defines a sequence of character data and phrase-level elements.",
        "gloss" : 
        [  ] },
      
      { "ident" : "macro.phraseSeq.limited",
        "module" : "tei",
        "type" : "",
        "desc" : 
        [  ],
        "shortDesc" : "(limited phrase sequence) defines a sequence of character data and those phrase-level elements that are not typically\nused for transcribing extant documents.",
        "gloss" : 
        [  ] },
      
      { "ident" : "macro.specialPara",
        "module" : "tei",
        "type" : "",
        "desc" : 
        [  ],
        "shortDesc" : "('special' paragraph content) defines the content model of elements such as notes or list items, which either contain a\n    series of component-level elements or else have the same structure as a paragraph, containing a\n    series of phrase-level and inter-level elements.",
        "gloss" : 
        [  ] } ],
    "datatypes" : 
    [ 
      { "ident" : "teidata.certainty",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressing a degree of certainty.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "valList",
            "valItem" : 
            [ 
              { "ident" : "high" },
              
              { "ident" : "medium" },
              
              { "ident" : "low" },
              
              { "ident" : "unknown" } ] } ] },
      
      { "ident" : "teidata.count",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used for a non-negative\ninteger value used as a count.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "nonNegativeInteger" } ] },
      
      { "ident" : "teidata.duration.iso",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values available for representation of a duration in time\n    using ISO 8601 standard formats",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "[0-9.,DHMPRSTWYZ\/:+\\-]+" } ] },
      
      { "ident" : "teidata.duration.w3c",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values available for representation of a duration in time using W3C datatypes.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "duration" } ] },
      
      { "ident" : "teidata.enumerated",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressed as a single XML name taken from a list of\n    documented possibilities.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "key" : "teidata.word" } ] },
      
      { "ident" : "teidata.interval",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines attribute values used to express an interval value.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "name" : "float" },
              
              { "type" : "valList",
                "valItem" : 
                [ 
                  { "ident" : "regular" },
                  
                  { "ident" : "irregular" },
                  
                  { "ident" : "unknown" } ] } ] } ] },
      
      { "ident" : "teidata.language",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used to identify a particular combination of human\n    language and writing system.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "name" : "language" },
              
              { "type" : "valList",
                "valItem" : 
                [ 
                  { "ident" : "" } ] } ] } ] },
      
      { "ident" : "teidata.name",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressed as an XML Name.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "Name" } ] },
      
      { "ident" : "teidata.namespace",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used to indicate XML namespaces as defined by the W3C\n    Namespaces in XML\n    Technical Recommendation.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "anyURI" } ] },
      
      { "ident" : "teidata.numeric",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used for numeric values.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "name" : "double" },
              
              { "type" : "dataRef",
                "name" : "token",
                "restriction" : "(\\-?[\\d]+\/\\-?[\\d]+)" },
              
              { "type" : "dataRef",
                "name" : "decimal" } ] } ] },
      
      { "ident" : "teidata.outputMeasurement",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines a range of values for use in specifying the size of an object that is intended for\n    display.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "[\\-+]?\\d+(\\.\\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)" } ] },
      
      { "ident" : "teidata.pattern",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines attribute values which\n    are expressed as a regular expression.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token" } ] },
      
      { "ident" : "teidata.pointer",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used to provide a single\n  URI, absolute or relative, pointing to some other\nresource, either within the current document or elsewhere.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "anyURI" } ] },
      
      { "ident" : "teidata.prefix",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines a range of values that may function as a URI scheme name.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "[a-z][a-z0-9\\+\\.\\-]*" } ] },
      
      { "ident" : "teidata.probCert",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines a range of attribute values which can be expressed either as a numeric probability or as a coded certainty value.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "key" : "teidata.probability" },
              
              { "type" : "dataRef",
                "key" : "teidata.certainty" } ] } ] },
      
      { "ident" : "teidata.probability",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressing a probability.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "double" } ] },
      
      { "ident" : "teidata.replacement",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines attribute values which contain a replacement template.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "textNode" } ] },
      
      { "ident" : "teidata.temporal.w3c",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressing a temporal\n  expression such as a date, a time, or a combination of them, that\n  conform to the W3C XML Schema Part 2: Datatypes Second Edition\n  specification.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "name" : "date" },
              
              { "type" : "dataRef",
                "name" : "gYear" },
              
              { "type" : "dataRef",
                "name" : "gMonth" },
              
              { "type" : "dataRef",
                "name" : "gDay" },
              
              { "type" : "dataRef",
                "name" : "gYearMonth" },
              
              { "type" : "dataRef",
                "name" : "gMonthDay" },
              
              { "type" : "dataRef",
                "name" : "time" },
              
              { "type" : "dataRef",
                "name" : "dateTime" } ] } ] },
      
      { "ident" : "teidata.text",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used to express some\n  kind of identifying string as a single sequence\n  of unicode characters possibly including whitespace.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "string" } ] },
      
      { "ident" : "teidata.truthValue",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used to express a truth\nvalue.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "boolean" } ] },
      
      { "ident" : "teidata.version",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values which may be used to\n  specify a TEI or Unicode version number.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "[\\d]+(\\.[\\d]+){0,2}" } ] },
      
      { "ident" : "teidata.versionNumber",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values used for version numbers.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "[\\d]+[a-z]*[\\d]*(\\.[\\d]+[a-z]*[\\d]*){0,3}" } ] },
      
      { "ident" : "teidata.word",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines the range of attribute values expressed as a single\n  word or token.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "token",
            "restriction" : "(\\p{L}|\\p{N}|\\p{P}|\\p{S})+" } ] },
      
      { "ident" : "teidata.xTruthValue",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "(extended truth value) defines the range of attribute values used to express a truth value which may be unknown.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "alternate",
            "minOccurs" : "1",
            "maxOccurs" : "1",
            "content" : 
            [ 
              { "type" : "dataRef",
                "name" : "boolean" },
              
              { "type" : "valList",
                "valItem" : 
                [ 
                  { "ident" : "unknown" },
                  
                  { "ident" : "inapplicable" } ] } ] } ] },
      
      { "ident" : "teidata.xmlName",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines attribute values which contain an XML name.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "dataRef",
            "name" : "NCName" } ] },
      
      { "ident" : "teidata.xpath",
        "ns" : "http:\/\/foo.foo\/foo",
        "type" : "dataSpec",
        "module" : "tei",
        "desc" : 
        [  ],
        "shortDesc" : "defines attribute values\nwhich contain an XPath expression.",
        "gloss" : 
        [  ],
        "altIdent" : 
        [  ],
        "content" : 
        [ 
          { "type" : "textNode" } ] } ],
    "macroRefs" : 
    [  ] }